{"version":3,"sources":["./src/app/pages/user-blood-bank-donate/services/user-blood-bank-donate-http.service.ts","./src/app/pages/url/services/url-https.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\nimport { API_ENDPOINT, API_CONFIG } from '@const/api.constant';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserBloodBankDonateHttpService {\n\n  private readonly baseUrl = environment.websiteNodeHost;\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * fetch all users as per filter\n   */\n   fetchAlldonateUser(\n    limit: number = API_CONFIG.pageSize,\n    page: number = 1,\n    where?: object,\n   ): Observable<any> {\n    const skip = (page - 1) * limit;\n    let filter = {\n      limit,\n      skip,\n      where,\n    }\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('filter', JSON.stringify(filter));\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.donate.fetchAll,\n      {\n        params: httpParams\n      }\n    );\n  }\n  /**\n   *fetch admin user details by its {id}\n   */\n   fetchdonateUserById(id: string): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.donate.fetchById + `/${id}`,\n  \n    );\n  }\n  /**\n   * creates admin user\n  */\n   createdonateUser(reqBody: any): Observable<any> {\n    let params = new HttpParams();\n    return this._http.post<any>(\n      this.baseUrl + API_ENDPOINT.donate.create,\n      reqBody ,\n      { params }\n    );\n  }\n \n  /**\n   *updates endpoint\n  */\n   updatedonateUser(reqBody: any, donateUserId:string): Observable<any> {\n    return this._http.put<any>(\n      this.baseUrl + API_ENDPOINT.donate.update + `/${donateUserId}`,\n       reqBody \n    );\n  }\n  /**\n   * delete endpoint\n  */\n   deletedonateUser(reqBody: any): Observable<any> {\n    return this._http.delete<any>(\n      this.baseUrl + API_ENDPOINT.donate.delete + `/${reqBody.id}`,\n       reqBody \n    );\n  }\n  /**\n   * @description fetch all Member as per filter\n   \n   */\n   fetchAllBloodBank(): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.bloodBank.fetchall\n    );\n  }\n  fetchAllUser(): Observable<any>{\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.users.fetchAll,\n      \n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\nimport { API_ENDPOINT, API_CONFIG } from '@const/api.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlHttpsService {\n\n  private readonly baseUrl = environment.websiteNodeHost;\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * fetch all users as per filter\n   */\n   fetchAllUrls(\n    limit: number = API_CONFIG.pageSize,\n    page: number = 1,\n    where?: object,\n   ): Observable<any> {\n    const skip = (page - 1) * limit;\n    let filter = {\n      limit,\n      skip,\n      where,\n    }\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('filter', JSON.stringify(filter));\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.url.fetchAll,\n      {\n        params: httpParams\n      }\n    );\n  }\n  /**\n   *fetch endpoint details by its {id}\n   */\n   fetchEndpointById(id: string): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.url.fetchById + `/${id}`,\n  \n    );\n  }\n  /**\n   * creates endpoint\n  */\n   createEndpoint(reqBody: any): Observable<any> {\n    let params = new HttpParams();\n    return this._http.post<any>(\n      this.baseUrl + API_ENDPOINT.url.create,\n      reqBody ,\n      { params }\n    );\n  }\n \n  /**\n   *updates endpoint\n  */\n   updateUrl(reqBody: any, urlId: string): Observable<any> {\n    return this._http.put<any>(\n      this.baseUrl + API_ENDPOINT.url.update + `/${urlId}`,\n       reqBody \n    );\n  }\n  /**\n   * delete endpoint\n  */\n   deleteEndpoint(reqBody: any): Observable<any> {\n    return this._http.delete<any>(\n      this.baseUrl + API_ENDPOINT.url.delete + `/${reqBody.id}`,\n       reqBody \n    );\n  }\n  /**\n   * @description fetch all Role as per filter\n   \n   */\n   fetchAllRole(\n   ): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.role.fetchAll\n    );\n  }\n  \n}\n"],"sourceRoot":"webpack:///"}