{"version":3,"sources":["webpack:///src/app/pages/user-blood-bank-request/services/user-blood-bank-request-http.service.ts","webpack:///src/app/pages/user-blood-bank-request/user-blood-bank-request-routing.module.ts","webpack:///src/app/pages/user-blood-bank-request/user-blood-bank-request.component.ts","webpack:///src/app/pages/user-blood-bank-request/user-blood-bank-request.component.html","webpack:///src/app/pages/user-blood-bank-request/user-blood-bank-request.module.ts","webpack:///src/app/pages/user-blood-bank-request/edit-user-blood-bank-request/edit-user-blood-bank-request.component.ts","webpack:///src/app/pages/user-blood-bank-request/edit-user-blood-bank-request/edit-user-blood-bank-request.component.html","webpack:///src/app/pages/user-blood-bank-request/components/user-blood-bank-request-form/user-blood-bank-request-form.component.ts","webpack:///src/app/pages/user-blood-bank-request/components/user-blood-bank-request-form/user-blood-bank-request-form.component.html","webpack:///src/app/pages/user-blood-bank-request/add-user-blood-bank-request/add-user-blood-bank-request.component.ts","webpack:///src/app/pages/user-blood-bank-request/add-user-blood-bank-request/add-user-blood-bank-request.component.html","webpack:///src/app/pages/user-blood-bank-request/components/user-blood-bank-request-listing/user-blood-bank-request-listing.component.ts","webpack:///src/app/pages/user-blood-bank-request/components/user-blood-bank-request-listing/user-blood-bank-request-listing.component.html"],"names":["UserBloodBankRequestHttpService","_http","baseUrl","websiteNodeHost","limit","pageSize","page","where","skip","filter","httpParams","append","JSON","stringify","get","bloodRequest","fetchAll","params","id","fetchById","reqBody","post","create","requestUserId","put","update","providedIn","routes","path","component","UserBloodBankRequestRoutingModule","forChild","imports","exports","UserBloodBankRequestComponent","_bloodbankRequesthttps","_toast","_spinner","breadcrumbList","listing","button","label","routerLink","pageTitle","paginationTotalCount","currentPage","statusID","inq","ACTIVE","INACTIVE","userRequestCount","userRequestList","userRequestFilter","subscriptions","getuserRequestList","show","add","fetchAllRequestUser","subscribe","resp","length","data","map","user","bloodbank","bloodBankID","count","hide","err","error","message","searchString","search","admin","deleteRequestUser","success","onSearchChange","onStatusUpdate","selector","templateUrl","styleUrls","UserBloodBankRequestModule","declarations","providers","EditUserBloodBankRequestComponent","_router","_activatedRoute","_bloodRequesttHttp","edit","fetchEndpointById","snapshot","UserBloodBankRequestId","fetchRequestUserById","res","bloodRequestWrapper","urlId","createdAt","updatedAt","updatedEndpointWrapper","updatedRequestUser","redirectToUserRequestListing","navigate","unsubscribe","UserBloodBankRequestFormComponent","_formBuilder","_bloodBankDonate","submit","back","bloodBankList","bloodUserList","initbloodRequestForm","getBloodBankList","getUserList","bloodRequestForm","group","userID","required","requestFor","isHospitalize","mapToWrapper","emit","formValue","getRawValue","toString","fetchAllBloodBank","fetchAllUser","onBackClick","onSubmit","AddUserBloodBankRequestComponent","_bloodRequestHttp","initiateUrlForm","createRequestUser","redirectToBloodRequestListing","onRequestSubmit","UserBloodBankRequestListingComponent","statusUpdate","adminUrl","updatedUserData"],"mappings":"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","file":"pages-user-blood-bank-request-user-blood-bank-request-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\nimport { API_ENDPOINT, API_CONFIG } from '@const/api.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserBloodBankRequestHttpService {\n\n  private readonly baseUrl = environment.websiteNodeHost;\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * fetch all users as per filter\n   */\n   fetchAllRequestUser(\n    limit: number = API_CONFIG.pageSize,\n    page: number = 1,\n    where?: object,\n   ): Observable<any> {\n    const skip = (page - 1) * limit;\n    let filter = {\n      limit,\n      skip,\n      where,\n    }\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('filter', JSON.stringify(filter));\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.bloodRequest.fetchAll,\n      {\n        params: httpParams\n      }\n    );\n  }\n  /**\n   *fetch admin user details by its {id}\n   */\n   fetchRequestUserById(id: string): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.bloodRequest.fetchById + `/${id}`,\n  \n    );\n  }\n  /**\n   * creates admin user\n  */\n   createRequestUser(reqBody: any): Observable<any> {\n    let params = new HttpParams();\n    return this._http.post<any>(\n      this.baseUrl + API_ENDPOINT.bloodRequest.create,\n      reqBody ,\n      { params }\n    );\n  }\n \n  /**\n   *updates endpoint\n  */\n   updatedRequestUser(reqBody: any, requestUserId:string): Observable<any> {\n    return this._http.put<any>(\n      this.baseUrl + API_ENDPOINT.bloodRequest.update + `/${requestUserId}`,\n       reqBody \n    );\n  }\n  /**\n   * delete endpoint\n  */\n   deleteRequestUser(reqBody: any): Observable<any> {\n    return this._http.delete<any>(\n      this.baseUrl + API_ENDPOINT.bloodRequest.delete + `/${reqBody.id}`,\n       reqBody \n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserBloodBankRequestComponent } from './user-blood-bank-request.component';\nimport { EditUserBloodBankRequestComponent } from './edit-user-blood-bank-request/edit-user-blood-bank-request.component';\nimport { AddUserBloodBankRequestComponent } from './add-user-blood-bank-request/add-user-blood-bank-request.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component:UserBloodBankRequestComponent,\n  },\n  {\n    path: 'add',\n    component:AddUserBloodBankRequestComponent,\n  },\n  {\n    path: 'edit/:id',\n    component:EditUserBloodBankRequestComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserBloodBankRequestRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserBloodBankRequestHttpService } from './services/user-blood-bank-request-http.service';\n\n\nimport { Subscription } from 'rxjs';\nimport { ButtonOptionsI } from '@shared/models/titlebar.model';\nimport { API_CONFIG} from '@const/api.constant';\nimport { UserBloodBankRequestI } from '../user-blood-bank-request/models/user-blood-bank-request'\nimport { SpinnerService } from '@shared/services/spinner.service';\nimport { ToastService } from '@shared/services/toast.service';\nimport { StatusEnum } from '@const/api.constant';\nimport { BreadcrumbI } from '@shared/models/titlebar.model';\nimport { BLOOD_REQUEST_BREADCRUMSLIST } from '@const/breadcrumb.constant';\n@Component({\n  selector: 'app-user-blood-bank-request',\n  templateUrl: './user-blood-bank-request.component.html',\n  styleUrls: ['./user-blood-bank-request.component.scss']\n})\nexport class UserBloodBankRequestComponent implements OnInit {\n  readonly breadcrumbList: BreadcrumbI[] = BLOOD_REQUEST_BREADCRUMSLIST.listing;\n  readonly button: ButtonOptionsI = {\n    label: 'Add User Blood Bank Request',\n    routerLink: ['/user-blood-bank-request/add']\n  };\n  readonly pageTitle = 'User Blood Bank Request';\n  readonly pageSize = API_CONFIG.pageSize;\n  paginationTotalCount = 0;\n  currentPage = 1;\n  searchString:string;\n  where: { [key: string]: any } = {\n    statusID: {inq: [StatusEnum.ACTIVE, StatusEnum.INACTIVE]}\n  };\n  userRequestCount:number = 0;\n  userRequestList:UserBloodBankRequestI[] = [];\n  userRequestFilter: { [key: string]: any } = {};\n  subscriptions: Subscription = new Subscription();\n  constructor(\n    private readonly _bloodbankRequesthttps:UserBloodBankRequestHttpService,\n    private _toast: ToastService,\n    private _spinner: SpinnerService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getuserRequestList()\n  }\n  getuserRequestList() {\n    this._spinner.show(\"Fetching Admin Users list...\")\n    this.subscriptions.add(\n      this._bloodbankRequesthttps.fetchAllRequestUser(this.pageSize,this.currentPage,this.where).subscribe(resp=>{\n        if(resp && resp['data'] && resp['data'].length > 0){\n          this.userRequestList = resp.data.map(user =>{\n            user['bloodBankDetails'] = resp['relationData'].bloodbank[user.bloodBankID] || \"\"\n            return user\n          })\n        }else{\n          this.userRequestList = []\n        }\n        this.userRequestCount = resp.count\n        this._spinner.hide();\n      },\n        (err) => {\n          this._toast.error(err.error.message)\n          this._spinner.hide();\n      })\n    )  \n  }\n  onPageChange(currentPage: number) {\n    this.currentPage = currentPage;\n    this.getuserRequestList();\n  }\n  onSearchChange(searchString: string) {\n    this.searchString = searchString;\n    if (this.searchString) {\n      this.where.search = searchString;\n    } else {\n      delete this.where.search;\n    }\n    this.currentPage = 1;\n    this.getuserRequestList();\n  }\n  onStatusUpdate(admin){\n    this.subscriptions.add(\n      this._bloodbankRequesthttps.deleteRequestUser(admin).subscribe(\n        (resp: any) => {\n          this.getuserRequestList();\n          this._toast.success(\"Admin User Delete Sucessfully\")\n        },\n        (err) => {\n          this._toast.error(err.error.message)\n        }\n      )\n    );\n  }\n}\n\n\n","<app-page-titlebar\n  [pageTitle]=\"pageTitle\"\n  [itemCount]=\"userRequestCount\"\n  [breadcrumbList]=\"breadcrumbList\"\n  [button]=\"button\"\n></app-page-titlebar>\n<!-- Main Section -->\n<div class=\"bg-white\">\n  <nav class=\"navbar navbar-expand-sm bg-white justify-content-between \">\n    <div class=\"col-md-5 p-0\">\n      <app-search-bar\n        [placeholder]=\"'Search by  Name'\"\n        (searchChange)=\"onSearchChange($event)\"\n      ></app-search-bar>\n    </div>\n  </nav>\n<app-user-blood-bank-request-listing\n[userRequestList]=\"userRequestList\"\n(statusUpdate)=\"onStatusUpdate($event)\"\n></app-user-blood-bank-request-listing>\n<app-pagination\n  *ngIf=\"userRequestCount\"\n  [total]=\"userRequestCount\"\n  [currentPage]=\"currentPage\"\n  (pageChange)=\"onPageChange($event)\"\n>\n</app-pagination>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UserBloodBankRequestRoutingModule } from './user-blood-bank-request-routing.module';\nimport { UserBloodBankRequestComponent } from './user-blood-bank-request.component';\nimport { UserBloodBankRequestFormComponent } from './components/user-blood-bank-request-form/user-blood-bank-request-form.component';\nimport { UserBloodBankRequestListingComponent } from './components/user-blood-bank-request-listing/user-blood-bank-request-listing.component';\nimport { EditUserBloodBankRequestComponent } from './edit-user-blood-bank-request/edit-user-blood-bank-request.component';\nimport { AddUserBloodBankRequestComponent } from './add-user-blood-bank-request/add-user-blood-bank-request.component';\nimport {UserBloodBankRequestHttpService} from '../user-blood-bank-request/services/user-blood-bank-request-http.service'\n\n@NgModule({\n  declarations: [\n    UserBloodBankRequestComponent, \n    UserBloodBankRequestFormComponent, \n    UserBloodBankRequestListingComponent, \n    EditUserBloodBankRequestComponent, \n    AddUserBloodBankRequestComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    NgbTooltipModule,\n    NgbDropdownModule,\n    UserBloodBankRequestRoutingModule,\n    NgSelectModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    UserBloodBankRequestHttpService\n  ]\n})\nexport class UserBloodBankRequestModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n// Rxjs\nimport { Subscription } from 'rxjs';\nimport { UserBloodBankRequestI } from '../models/user-blood-bank-request';\nimport { UserBloodBankRequestHttpService } from '../services/user-blood-bank-request-http.service'\nimport { SpinnerService } from '@shared/services/spinner.service';\nimport { ToastService } from '@shared/services/toast.service';\nimport { BreadcrumbI } from '@shared/models/titlebar.model';\nimport { BLOOD_REQUEST_BREADCRUMSLIST } from '@const/breadcrumb.constant';\n@Component({\n  selector: 'app-edit-user-blood-bank-request',\n  templateUrl: './edit-user-blood-bank-request.component.html',\n  styleUrls: ['./edit-user-blood-bank-request.component.scss']\n})\nexport class EditUserBloodBankRequestComponent implements OnInit {\n  readonly breadcrumbList: BreadcrumbI[] = BLOOD_REQUEST_BREADCRUMSLIST.edit;\n  readonly pageTitle = 'Edit User Blood Bank Request';\n  bloodRequestWrapper: UserBloodBankRequestI;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute,\n    private _spinner: SpinnerService,\n    private _bloodRequesttHttp: UserBloodBankRequestHttpService,\n    private _toast: ToastService\n   \n  ) {}\n\n  ngOnInit() {\n    this.fetchEndpointById(this._activatedRoute.snapshot.params.id);\n  }\n  \n  fetchEndpointById(UserBloodBankRequestId: string) {\n    this._spinner.show('User Blood Request Detail...');\n    this.subscriptions.add(\n      this._bloodRequesttHttp.fetchRequestUserById(UserBloodBankRequestId).subscribe(\n        (res) => {\n          this.bloodRequestWrapper = res;\n          this._spinner.hide();\n        },\n        (err) => {\n          this._toast.error(\n            err.error.message,\n            'Failed to Fetch User Blood Request Details'\n          );\n          this._spinner.hide();\n        }\n      )\n    );\n  }\n\n  onUserBloodRequestSubmit() {\n    let urlId = this.bloodRequestWrapper.id;\n    if(this.bloodRequestWrapper.statusID === false){\n      this.bloodRequestWrapper.statusID = 0\n    }else if(this.bloodRequestWrapper.statusID === true){\n      this.bloodRequestWrapper.statusID = 1;\n    }\n    delete  this.bloodRequestWrapper.id;\n    delete this.bloodRequestWrapper.createdAt;\n    delete this.bloodRequestWrapper.updatedAt;\n    // delete this.bloodRequestWrapper.updatedAt;\n    this._spinner.show('Updating URL ...');\n    let updatedEndpointWrapper = { ...this.bloodRequestWrapper };\n    this.subscriptions.add(\n      this._bloodRequesttHttp.updatedRequestUser(updatedEndpointWrapper, urlId).subscribe(\n        (res) => {\n          this._toast.success(`User Blood Request updated successfully.`);\n          this.redirectToUserRequestListing();\n          this._spinner.hide();\n        },\n        (err) => {\n          this._toast.error(\n            err.error.message,\n            'User Blood Request Update Failed'\n          );\n        }\n      )\n    );\n   }\n\n  redirectToUserRequestListing() {\n    this._router.navigate(['/user-blood-bank-request']);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this._spinner.hide();\n  }\n\n}\n","<app-page-titlebar\n  [pageTitle]=\"pageTitle\"\n  [breadcrumbList]=\"breadcrumbList\"\n></app-page-titlebar>\n<main class=\"main-section bg-white float-left w-100\">\n    <ng-container *ngIf=\"bloodRequestWrapper\">\n    <app-user-blood-bank-request-form\n    [bloodRequestWrapper]=\"bloodRequestWrapper\" \n    (submit)=\"onUserBloodRequestSubmit()\"\n    (back)=\"redirectToAdminListing()\"\n    > \n    </app-user-blood-bank-request-form>\n    </ng-container>\n</main>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport get from 'lodash.get';\nimport set from 'lodash.set';\nimport { StatusEnum } from '@const/api.constant';\nimport { UserBloodBankRequestI} from '../../models/user-blood-bank-request';\nimport { UserBloodBankDonateHttpService } from '../../../user-blood-bank-donate/services/user-blood-bank-donate-http.service';\n@Component({\n  selector: 'app-user-blood-bank-request-form',\n  templateUrl: './user-blood-bank-request-form.component.html',\n  styleUrls: ['./user-blood-bank-request-form.component.scss']\n})\nexport class UserBloodBankRequestFormComponent implements OnInit {\n\n  @Input() bloodRequestWrapper:UserBloodBankRequestI;\n  @Output() submit: EventEmitter<void> = new EventEmitter<void>();\n  @Output() back: EventEmitter<void> = new EventEmitter<void>();\n  subscriptions: Subscription = new Subscription();\n  bloodRequestForm: FormGroup;\n  bloodBankList = [];\n  bloodUserList = [];\n  \n  \n  constructor(\n    private _formBuilder: FormBuilder,\n    private _bloodBankDonate:UserBloodBankDonateHttpService\n    ) {}\n\n  ngOnInit() {\n    this.initbloodRequestForm();\n    this.getBloodBankList();\n    this.getUserList();\n  }\n  \n  /**\n   * @description initiate endpoint form\n   * @memberof EndpointFormComponent\n   */\n   initbloodRequestForm() {\n    this.bloodRequestForm = this._formBuilder.group({\n      userID: [get(this.bloodRequestWrapper, ['userID'], ''), Validators.required],\n      bloodBankID: [get(this.bloodRequestWrapper, ['bloodBankID'], ''), Validators.required],\n      requestFor: [get(this.bloodRequestWrapper, ['requestFor'], ''), Validators.required],\n      isHospitalize: [get(this.bloodRequestWrapper, ['isHospitalize'], ''), Validators.required],\n      statusID: [\n        get(this.bloodRequestWrapper, ['statusID'],StatusEnum.ACTIVE)],\n     \n    });\n  }\n\n  /**\n   * @description on submit, map to wrapper and emit submit event\n   * @memberof EndpointFormComponent\n   */\n  onSubmit() {\n    this.mapToWrapper();\n    this.submit.emit();\n  }\n\n  /**\n   * @description map form value to wrapper\n   * @memberof EndpointFormComponent\n   */\n  mapToWrapper() {\n    let formValue = this.bloodRequestForm.getRawValue();\n    set(this.bloodRequestWrapper, ['userID'], formValue['userID']);\n    set(this.bloodRequestWrapper, ['bloodBankID'], formValue['bloodBankID']);\n    set(this.bloodRequestWrapper, ['requestFor'], formValue['requestFor']);\n    set(this.bloodRequestWrapper, ['isHospitalize'], formValue['isHospitalize'].toString());\n    set(this.bloodRequestWrapper, ['statusID'], formValue['statusID']);\n  }\n\n  getBloodBankList() {\n    this.subscriptions.add(\n      this._bloodBankDonate.fetchAllBloodBank().subscribe(resp=>{\n       this.bloodBankList = resp.data;\n      })\n    )  \n  }\n  getUserList(){\n    this.subscriptions.add(\n      this._bloodBankDonate.fetchAllUser().subscribe(resp=>{\n       this.bloodUserList = resp.data;\n      })\n    ) \n  }\n/**\n   * @description emit back click\n   * @memberof EndpointFormComponent\n   */\n onBackClick() {\n  this.back.emit();\n}\n\n}\n\n","<form [formGroup]=\"bloodRequestForm\" class=\"p-4 pb-0\">\n  \n    <!-- endpoint-url and status -->\n    <div class=\"row\">\n      <div class=\"form-group col-lg-6 required\">\n        <label>User ID</label>\n        <ng-select\n        class=\"w-100 text-capitalize\"\n        [multiple]=\"false\" \n        [items]=\"bloodUserList\" \n        bindLabel=\"firstName\"\n        bindValue=\"id\"\n        [searchable]=\"false\"\n        formControlName=\"userID\"\n      ></ng-select>\n      </div>\n      <div class=\"form-group col-lg-6 mt-4 d-flex justify-content-end\">\n        <label class=\"switchToggle\">\n            <input type=\"checkbox\" formControlName=\"statusID\" />\n            <span class=\"switchSlider\"></span>\n            </label>\n      </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n          <label>Blood Bank ID</label>\n          <ng-select\n          class=\"w-100 text-capitalize\"\n          [multiple]=\"false\" \n          [items]=\"bloodBankList\" \n          bindLabel=\"firstName\"\n          bindValue=\"id\"\n          [searchable]=\"false\"\n          formControlName=\"bloodBankID\"\n        ></ng-select>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n          <label>Request For</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"requestFor\" />\n        </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-lg-6 required\">\n        <div  class=\"custom-control custom-checkbox custom-control-inline pt-2\">\n          <input\n              type=\"checkbox\"\n              class=\"custom-control-input\"\n              id=\"isHospitalize\"\n              name=\"isHospitalize\"\n              formControlName=\"isHospitalize\"\n          />\n          <label\n            class=\"custom-control-label pl-2\"\n            for=\"isHospitalize\"\n          >isHospitalize</label>\n        </div>\n      </div>\n    </div>\n      \n    \n  </form>\n  \n  <!-- Footer -->\n  <div class=\"footer clearfix  p-4\">\n    <button\n      type=\"button\"\n      (click)=\"onBackClick()\"\n      class=\"btn btn-outline-primary font-weight-bold float-left px-4\"\n    >\n      BACK\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary font-weight-bold float-right px-4\"\n      [ngClass]=\"{ disabled: bloodRequestForm.invalid }\"\n      [disabled]=\"bloodRequestForm.invalid\"\n      (click)=\"onSubmit()\"\n    >\n      SAVE\n    </button>\n  </div>\n  ","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserBloodBankRequestI} from '../models/user-blood-bank-request';\nimport { UserBloodBankRequestHttpService } from '../services/user-blood-bank-request-http.service';\nimport { StatusEnum } from '@const/api.constant';\nimport { ToastService } from '@shared/services/toast.service';\nimport { BreadcrumbI } from '@shared/models/titlebar.model';\nimport { BLOOD_REQUEST_BREADCRUMSLIST } from '@const/breadcrumb.constant';\n@Component({\n  selector: 'app-add-user-blood-bank-request',\n  templateUrl: './add-user-blood-bank-request.component.html',\n  styleUrls: ['./add-user-blood-bank-request.component.scss']\n})\nexport class AddUserBloodBankRequestComponent implements OnInit {\n  readonly breadcrumbList: BreadcrumbI[] = BLOOD_REQUEST_BREADCRUMSLIST.add;\n  readonly pageTitle = 'Add User Blood Bank Request';\n  bloodRequestWrapper: UserBloodBankRequestI;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private _router: Router,\n    private _bloodRequestHttp: UserBloodBankRequestHttpService,\n    private _toast: ToastService\n  ) {}\n\n  ngOnInit() {\n    this.initiateUrlForm();\n  }\n\n  initiateUrlForm() {\n    this.bloodRequestWrapper = {\n      userID: \"\",\n      bloodBankID: \"\",\n      requestFor: \"\",\n      isHospitalize: \"\",\n      statusID: StatusEnum.ACTIVE\n    };\n  }\n\n  onRequestSubmit() {\n    if(this.bloodRequestWrapper.statusID === false){\n      this.bloodRequestWrapper.statusID = 0\n    }else if(this.bloodRequestWrapper.statusID === true){\n      this.bloodRequestWrapper.statusID = 1;\n    }\n    this.subscriptions.add(\n      this._bloodRequestHttp.createRequestUser(this.bloodRequestWrapper).subscribe(\n        (res) => {\n          this.redirectToBloodRequestListing();\n          this._toast.success(`Blood Request Created successfully.`);\n        },\n        (err) => {\n          this._toast.error(\n            err.error.message,\n          );\n        }\n      )\n    );\n  }\n\n  redirectToBloodRequestListing() {\n    this._router.navigate(['/user-blood-bank-request']);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n}\n","<app-page-titlebar\n    [breadcrumbList]=\"breadcrumbList\"\n    [pageTitle]=\"pageTitle\"\n  ></app-page-titlebar>\n<main class=\"main-section bg-white float-left w-100\">\n    <app-user-blood-bank-request-form\n    [bloodRequestWrapper]=\"bloodRequestWrapper\" \n    (submit)=\"onRequestSubmit()\"\n    (back)=\"redirectToBloodRequestListing()\"\n    > \n    </app-user-blood-bank-request-form>\n</main>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UserBloodBankRequestI } from '../../models/user-blood-bank-request'\n\n@Component({\n  selector: 'app-user-blood-bank-request-listing',\n  templateUrl: './user-blood-bank-request-listing.component.html',\n  styleUrls: ['./user-blood-bank-request-listing.component.scss']\n})\nexport class UserBloodBankRequestListingComponent implements OnInit {\n\n  @Input() userRequestList:UserBloodBankRequestI[];\n  @Output() statusUpdate: EventEmitter<any> = new EventEmitter<any>();\n  readonly adminUrl: string = 'edit/';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onUpdate(updatedUserData) {\n  this.statusUpdate.emit(updatedUserData);\n  }\n\n}\n","\n<!-- Table -->\n<div class=\"acl-user-container\">\n    <table class=\"table user-table\">\n      <thead>\n        <tr class=\"border-top border-bottom\">\n          <th class=\"font-weight-normal align-middle  pl-3\">Date</th>\n          <th class=\"font-weight-normal align-middle  pl-3\">Name</th>\n          <th class=\"font-weight-normal align-middle  pl-3\">Is Hospitalize</th>\n          <th class=\"font-weight-normal align-middle  pl-3\">RequestFor</th>\n          <th class=\"font-weight-normal align-middle px-3\" style=\"width:120px\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-bottom\"  *ngFor=\"let admin of userRequestList\">\n          <td class=\"align-middle  pl-3\">\n           {{admin?.createdAt | date: 'dd/MM/yyyy' }}\n          </td>\n          <td class=\"align-middle  pl-3\">\n             <a \n                [routerLink]=\"['/blood-bank/edit/',admin?.bloodBankID]\" \n                target= \"_blank\"\n              >{{admin?.bloodBankDetails?.firstName}} {{admin?.bloodBankDetails?.lastName}}</a>\n           </td>\n          <td class=\"align-middle  pl-3\">\n            {{admin?.isHospitalize}}\n           </td>\n           <td class=\"align-middle  pl-3\">\n            {{admin?.requestFor}}\n           </td>\n          <td class=\"align-middle\">\n            <app-action-bar\n            [item]=\"admin\"\n            (onItemUpdate)=\"onUpdate($event)\"\n            [showStatus]=\"false\"\n            [showClone]=\"false\"\n            [editPageUrl]=\"adminUrl + admin.id\"\n          ></app-action-bar>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n "]}