{"version":3,"sources":["webpack:///src/app/pages/apikey/components/apikey-form/apikey-form.component.ts","webpack:///src/app/pages/apikey/components/apikey-form/apikey-form.component.html","webpack:///src/app/pages/apikey/apikey.module.ts","webpack:///src/app/pages/apikey/apikey-routing.module.ts","webpack:///src/app/pages/apikey/apikey.component.ts","webpack:///src/app/pages/apikey/apikey.component.html","webpack:///src/app/pages/apikey/components/apikey-listing/apikey-listing.component.ts","webpack:///src/app/pages/apikey/components/apikey-listing/apikey-listing.component.html","webpack:///src/app/pages/apikey/services/apikey-http.service.ts","webpack:///src/app/pages/apikey/edit-apikey/edit-apikey.component.ts","webpack:///src/app/pages/apikey/edit-apikey/edit-apikey.component.html","webpack:///src/app/pages/apikey/add-apikey/add-apikey.component.ts","webpack:///src/app/pages/apikey/add-apikey/add-apikey.component.html"],"names":["ApikeyFormComponent","_formBuilder","_apiKeyhttps","submit","back","subscriptions","apiKeyList","apiKeyId","roleList","roleId","initapiKeyForm","getRoleList","apiKeyForm","group","name","apiKeyWrapper","required","apikey","roleID","statusID","ACTIVE","mapToWrapper","emit","formValue","getRawValue","add","fetchAllRole","subscribe","resp","data","onBackClick","onSubmit","selector","templateUrl","styleUrls","ApikeyModule","declarations","imports","providers","routes","path","component","ApikeyRoutingModule","forChild","exports","ApikeyComponent","_apkeyhttps","_toast","_spinner","breadcrumbList","listing","button","label","routerLink","pageTitle","pageSize","paginationTotalCount","currentPage","where","inq","INACTIVE","apikeyCount","apikeyList","apikeyFilter","getApiKeysList","show","fetchAllApiKeys","count","hide","err","error","message","searchString","search","api","deleteApiKey","success","onSearchChange","onStatusUpdate","ApikeyListingComponent","statusUpdate","apikeyUrl","updatedUserData","ApikeyHttpService","_http","baseUrl","websiteNodeHost","limit","page","skip","filter","httpParams","append","JSON","stringify","get","apiKey","fetchAll","params","id","fetchById","reqBody","post","create","apiId","put","update","role","providedIn","EditApikeyComponent","_router","_route","_apiKeyHttp","edit","apiID","snapshot","apiKeyGetByID","fetchApiKeyById","createdAt","updateApiKey","redirectToApiKeyListing","navigate","unsubscribe","AddApikeyComponent","initiateApiKeyForm","createApiKey","res","onApiKeySubmit"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;UAaaA,mB;AAYX,qCACUC,YADV,EAEUC,YAFV,EAEyC;AAAA;;AAD/B,eAAAD,YAAA,GAAAA,YAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AAXA,eAAAC,MAAA,GAA6B,IAAI,0DAAJ,EAA7B;AACA,eAAAC,IAAA,GAA2B,IAAI,0DAAJ,EAA3B;AACV,eAAAC,aAAA,GAA8B,IAAI,iDAAJ,EAA9B;AAEA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,QAAA,GAAe,EAAf;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,MAAA,GAAgB,EAAhB;AAKM;;;;qCAEK;AACT,iBAAKC,cAAL;AACA,iBAAKC,WAAL;AACD;AAED;;;;;;;2CAIkB;AAChB,iBAAKC,UAAL,GAAkB,KAAKX,YAAL,CAAkBY,KAAlB,CAAwB;AACxCC,kBAAI,EAAE,CAAC,kDAAI,KAAKC,aAAT,EAAwB,CAAC,MAAD,CAAxB,EAAkC,EAAlC,CAAD,EAAwC,0DAAWC,QAAnD,CADkC;AAExCC,oBAAM,EAAE,CAAC,kDAAI,KAAKF,aAAT,EAAwB,CAAC,QAAD,CAAxB,EAAoC,EAApC,CAAD,EAA0C,0DAAWC,QAArD,CAFgC;AAGxCE,oBAAM,EAAE,CAAC,kDAAI,KAAKH,aAAT,EAAwB,CAAC,QAAD,CAAxB,EAAoC,EAApC,CAAD,EAA0C,0DAAWC,QAArD,CAHgC;AAIxCG,sBAAQ,EAAE,CACR,kDAAI,KAAKJ,aAAT,EAAwB,CAAC,UAAD,CAAxB,EAAqC,+DAAWK,MAAhD,CADQ;AAJ8B,aAAxB,CAAlB;AAQD;AAED;;;;;;;qCAIW;AACT,iBAAKC,YAAL;AACA,iBAAKlB,MAAL,CAAYmB,IAAZ;AACD;AAED;;;;;;;yCAIe;AACb,gBAAIC,SAAS,GAAG,KAAKX,UAAL,CAAgBY,WAAhB,EAAhB;AACA,8DAAI,KAAKT,aAAT,EAAwB,CAAC,MAAD,CAAxB,EAAkCQ,SAAS,CAAC,MAAD,CAA3C;AACA,8DAAI,KAAKR,aAAT,EAAwB,CAAC,QAAD,CAAxB,EAAoCQ,SAAS,CAAC,QAAD,CAA7C;AACA,8DAAI,KAAKR,aAAT,EAAwB,CAAC,UAAD,CAAxB,EAAsCQ,SAAS,CAAC,UAAD,CAA/C;AACA,8DAAI,KAAKR,aAAT,EAAwB,CAAC,QAAD,CAAxB,EAAoCQ,SAAS,CAAC,QAAD,CAA7C;AACD;;;wCACa;AAAA;;AACZ,iBAAKlB,aAAL,CAAmBoB,GAAnB,CACE,KAAKvB,YAAL,CAAkBwB,YAAlB,GAAiCC,SAAjC,CAA2C,UAAAC,IAAI,EAAE;AAChD,mBAAI,CAACpB,QAAL,GAAgBoB,IAAI,CAACC,IAArB;AACA,aAFD,CADF;AAKD;AAEH;;;;;;;wCAIe;AACb,iBAAKzB,IAAL,CAAUkB,IAAV;AACD;;;;;;;yBAvEYtB,mB,EAAmB,2H,EAAA,gJ;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,41B;AAAA;AAAA;ACbhC;;AAGI;;AACE;;AACE;;AAAO;;AAAI;;AACX;;AACF;;AACA;;AACE;;AACI;;AACA;;AACA;;AACN;;AACF;;AAEA;;AACI;;AACE;;AAAO;;AAAO;;AACd;;AACF;;AACF;;AAGF;;AACI;;AACE;;AAAO;;AAAI;;AACX;;AASF;;AACF;;AAEF;;AAIF;;AAGA;;AACE;;AAEE;AAAA,qBAAS,IAAA8B,WAAA,EAAT;AAAsB,aAAtB;;AAGA;;AACF;;AACA;;AAKE;AAAA,qBAAS,IAAAC,QAAA,EAAT;AAAmB,aAAnB;;AAEA;;AACF;;AACF;;;;AA/DI;;AA6BM;;AAAA,wFAAkB,OAAlB,EAAkB,YAAlB,EAAkB,YAAlB,EAAkB,IAAlB;;AA4BN;;AAAA,+KAA4C,UAA5C,EAA4C,sBAA5C;;;;;;;;;wED5CO/B,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTgC,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;AAErBnB,uBAAa;kBAArB;AAAqB,Y;AACZZ,gBAAM,EAAE,CAAF;kBAAf;AAAe,WAAE,C;AACRC,cAAI,EAAE,CAAF;kBAAb;AAAa,WAAE;;;;;;;;;;;;;;;;;;;AEjBlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA+Ba+B,Y;;;;;cAAAA;;;;2BAAAA,Y;AAAY,S;AAAA,mBAJZ,CACT,gFADS,C;AAEV,kBAXQ,CACP,4DADO,EAEP,0EAFO,EAGP,yEAHO,EAIP,2EAJO,EAKP,4EALO,EAMP,mEANO,EAOP,kEAPO,CAWR;;;;4HAEUA,Y,EAAY;AAAA,yBAdR,iEAcQ,EAdS,mFAcT,EAd6B,sFAc7B,EAdkD,kGAclD,EAduE,2GAcvE;AAd6F,oBAElH,4DAFkH,EAGlH,0EAHkH,EAIlH,yEAJkH,EAKlH,2EALkH,EAMlH,4EANkH,EAOlH,mEAPkH,EAQlH,kEARkH;AAc7F,S;AANF,O;;;;;wEAMVA,Y,EAAY;gBAfxB,sDAewB;iBAff;AACRC,wBAAY,EAAE,CAAC,iEAAD,EAAkB,mFAAlB,EAAsC,sFAAtC,EAA2D,kGAA3D,EAAgF,2GAAhF,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,0EAFO,EAGP,yEAHO,EAIP,2EAJO,EAKP,4EALO,EAMP,mEANO,EAOP,kEAPO,CAFD;AAWRC,qBAAS,EAAE,CACT,gFADS;AAXH,W;AAee,U;;;;;;;;;;;;;;;;;;AC/BzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAC,EADP;AAEEC,iBAAS,EAAC;AAFZ,OADqB,EAKrB;AACED,YAAI,EAAC,KADP;AAEEC,iBAAS,EAAC;AAFZ,OALqB,EASrB;AACED,YAAI,EAAC,UADP;AAEEC,iBAAS,EAAC;AAFZ,OATqB,CAAvB;;UAmBaC,mB;;;;;cAAAA;;;;2BAAAA,mB;AAAmB,S;AAAA,kBAHrB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGqB,EAFpB,4DAEoB;;;;4HAAnBG,mB,EAAmB;AAAA;AAAA,oBAFpB,4DAEoB;AAAA,S;AAFR,O;;;;;wEAEXA,mB,EAAmB;gBAJ/B,sDAI+B;iBAJtB;AACRL,mBAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIsB,U;;;;;;;;;;;;;;;;;;ACxBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACsBA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;;;;;AAJE,gGAAqB,aAArB,EAAqB,kBAArB;;;;UDNWC,e;AAkBX,iCACmBC,WADnB,EAEUC,MAFV,EAGUC,QAHV,EAGkC;AAAA;;AAFf,eAAAF,WAAA,GAAAA,WAAA;AACT,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AApBD,eAAAC,cAAA,GAAgC,iFAAsBC,OAAtD;AACA,eAAAC,MAAA,GAAyB;AAChCC,iBAAK,EAAE,iBADyB;AAEhCC,sBAAU,EAAE,CAAC,cAAD;AAFoB,WAAzB;AAIA,eAAAC,SAAA,GAAY,SAAZ;AACA,eAAAC,QAAA,GAAW,+DAAWA,QAAtB;AACT,eAAAC,oBAAA,GAAuB,CAAvB;AACA,eAAAC,WAAA,GAAc,CAAd;AAEA,eAAAC,KAAA,GAAgC;AAC9BvC,oBAAQ,EAAE;AAACwC,iBAAG,EAAE,CAAC,+DAAWvC,MAAZ,EAAoB,+DAAWwC,QAA/B;AAAN;AADoB,WAAhC;AAGA,eAAAC,WAAA,GAAqB,CAArB;AACA,eAAAC,UAAA,GAAwB,EAAxB;AACA,eAAAC,YAAA,GAAuC,EAAvC;AACA,eAAA1D,aAAA,GAA8B,IAAI,iDAAJ,EAA9B;AAKK;;;;qCAEG;AACN,iBAAK2D,cAAL;AACD;;;2CACgB;AAAA;;AACf,iBAAKhB,QAAL,CAAciB,IAAd,CAAmB,0BAAnB;;AACA,iBAAK5D,aAAL,CAAmBoB,GAAnB,CACE,KAAKqB,WAAL,CAAiBoB,eAAjB,CAAiC,KAAKX,QAAtC,EAA+C,KAAKE,WAApD,EAAgE,KAAKC,KAArE,EAA4E/B,SAA5E,CAAsF,UAAAC,IAAI,EAAE;AAE1F,oBAAI,CAACkC,UAAL,GAAkBlC,IAAI,CAACC,IAAvB;AACA,oBAAI,CAACgC,WAAL,GAAmBjC,IAAI,CAACuC,KAAxB;;AACA,oBAAI,CAACnB,QAAL,CAAcoB,IAAd;AACD,aALD,EAME,UAACC,GAAD,EAAS;AACP,oBAAI,CAACtB,MAAL,CAAYuB,KAAZ,CAAkBD,GAAG,CAACC,KAAJ,CAAUC,OAA5B;;AACA,oBAAI,CAACvB,QAAL,CAAcoB,IAAd;AACH,aATD,CADF;AAYD;;;uCACYX,W,EAAqB;AAChC,iBAAKA,WAAL,GAAmBA,WAAnB;AACA,iBAAKO,cAAL;AACD;;;yCACcQ,Y,EAAsB;AACnC,iBAAKA,YAAL,GAAoBA,YAApB;;AACA,gBAAI,KAAKA,YAAT,EAAuB;AACrB,mBAAKd,KAAL,CAAWe,MAAX,GAAoBD,YAApB;AACD,aAFD,MAEO;AACL,qBAAO,KAAKd,KAAL,CAAWe,MAAlB;AACD;;AACD,iBAAKhB,WAAL,GAAmB,CAAnB;AACA,iBAAKO,cAAL;AACD;;;yCACcU,G,EAAG;AAAA;;AAChB,iBAAKrE,aAAL,CAAmBoB,GAAnB,CACE,KAAKqB,WAAL,CAAiB6B,YAAjB,CAA8BD,GAA9B,EAAmC/C,SAAnC,CACE,UAACC,IAAD,EAAe;AACb,oBAAI,CAACoC,cAAL;;AACA,oBAAI,CAACjB,MAAL,CAAY6B,OAAZ,CAAoB,4BAApB;AACD,aAJH,EAKE,UAACP,GAAD,EAAS;AACP,oBAAI,CAACtB,MAAL,CAAYuB,KAAZ,CAAkBD,GAAG,CAACC,KAAJ,CAAUC,OAA5B;AACD,aAPH,CADF;AAWD;;;;;;;yBApEU1B,e,EAAe,gJ,EAAA,4I,EAAA,gJ;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,sW;AAAA;AAAA;AClB5B;;AAOA;;AACE;;AACE;;AACE;;AAEE;AAAA,qBAAgB,IAAAgC,cAAA,QAAhB;AAAsC,aAAtC;;AACD;;AAEH;;AAEF;;AACF;;AAEA;AAAA,qBAAgB,IAAAC,cAAA,QAAhB;AAAsC,aAAtC;;AACC;;AACD;;AAOA;;;;AA5BE,iGAAuB,WAAvB,EAAuB,eAAvB,EAAuB,gBAAvB,EAAuB,kBAAvB,EAAuB,QAAvB,EAAuB,UAAvB;;AAUM;;AAAA;;AAQR;;AAAA;;AAIG;;AAAA;;;;;;;;;wEDLUjC,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTb,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AElB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACaQ;;AACE;;AACC;;;;AACD;;AACA;;AACE;;AACD;;AACD;;AACE;;AACF;;AAEA;;AACE;;AAEA;AAAA;;AAAA;;AAAA;AAAA;;AAID;;AACD;;AACF;;;;;;;;AAlBG;;AAAA;;AAGC;;AAAA;;AAGA;;AAAA;;AAKA;;AAAA,mFAAY,YAAZ,EAAY,KAAZ,EAAY,WAAZ,EAAY,KAAZ,EAAY,aAAZ,EAAY,4BAAZ;;;;UDnBC6C,sB;AAIX,0CAAc;AAAA;;AAFJ,eAAAC,YAAA,GAAkC,IAAI,0DAAJ,EAAlC;AACD,eAAAC,SAAA,GAAoB,OAApB;AACQ;;;;qCAET,CACP;;;mCAEQC,e,EAAiB;AAC1B,iBAAKF,YAAL,CAAkB1D,IAAlB,CAAuB4D,eAAvB;AACC;;;;;;;yBAXUH,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,wf;AAAA;AAAA;ACNnC;;AACI;;AACE;;AACE;;AACE;;AAAkD;;AAAI;;AACtD;;AAAkD;;AAAI;;AACtD;;AAA6C;;AAAO;;AACpD;;AAAqE;;AAAM;;AAC7E;;AACF;;AACA;;AAEE;;AAqBF;;AACF;;AACF;;;;AAvBiD;;AAAA;;;;;;;;;;wEDNtCA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACT/C,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;AACxB4B,oBAAU;kBAAlB;AAAkB,Y;AACTkB,sBAAY,EAAE,CAAF;kBAArB;AAAqB,WAAE;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaG,iB;AAIX,mCAAoBC,KAApB,EAAuC;AAAA;;AAAnB,eAAAA,KAAA,GAAAA,KAAA;AAFH,eAAAC,OAAA,GAAU,6DAAYC,eAAtB;AAEwB;AAEzC;;;;;;;4CAMgB;AAAA,gBAFdC,KAEc,uEAFE,+DAAWhC,QAEb;AAAA,gBADdiC,IACc,uEADC,CACD;AAAA,gBAAd9B,KAAc;AAEd,gBAAM+B,IAAI,GAAG,CAACD,IAAI,GAAG,CAAR,IAAaD,KAA1B;AACA,gBAAIG,MAAM,GAAG;AACXH,mBAAK,EAALA,KADW;AAEXE,kBAAI,EAAJA,IAFW;AAGX/B,mBAAK,EAALA;AAHW,aAAb;AAKA,gBAAIiC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;AACAA,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,QAAlB,EAA4BC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA5B,CAAb;AACA,mBAAO,KAAKN,KAAL,CAAWW,GAAX,CACL,KAAKV,OAAL,GAAe,iEAAaW,MAAb,CAAoBC,QAD9B,EAEL;AACEC,oBAAM,EAAEP;AADV,aAFK,CAAP;AAMD;AACD;;;;;;0CAGiBQ,E,EAAU;AACzB,mBAAO,KAAKf,KAAL,CAAWW,GAAX,CACL,KAAKV,OAAL,GAAe,iEAAaW,MAAb,CAAoBI,SAAnC,cAAmDD,EAAnD,CADK,CAAP;AAID;AACD;;;;;;uCAGcE,O,EAAY;AACxB,gBAAIH,MAAM,GAAG,IAAI,+DAAJ,EAAb;AACA,mBAAO,KAAKd,KAAL,CAAWkB,IAAX,CACL,KAAKjB,OAAL,GAAe,iEAAaW,MAAb,CAAoBO,MAD9B,EAELF,OAFK,EAGL;AAAEH,oBAAM,EAANA;AAAF,aAHK,CAAP;AAKD;AAED;;;;;;uCAGcG,O,EAAcG,K,EAAa;AACvC,mBAAO,KAAKpB,KAAL,CAAWqB,GAAX,CACL,KAAKpB,OAAL,GAAe,iEAAaW,MAAb,CAAoBU,MAAnC,cAAgDF,KAAhD,CADK,EAEJH,OAFI,CAAP;AAID;AACD;;;;;;uCAGcA,O,EAAY;AACxB,mBAAO,KAAKjB,KAAL,WACL,KAAKC,OAAL,GAAe,iEAAaW,MAAb,UAAf,cAAgDK,OAAO,CAACF,EAAxD,CADK,EAEJE,OAFI,CAAP;AAID;AAED;;;;;;;;;;;yCAQa;AACX,mBAAO,KAAKjB,KAAL,CAAWW,GAAX,CACL,KAAKV,OAAL,GAAe,iEAAasB,IAAb,CAAkBV,QAD5B,CAAP;AAGD;;;;;;;yBAjFUd,iB,EAAiB,uH;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;wEAEDA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVyB,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;ACX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAGA;;;;;;;ACEI;;AACI;;AAEA;AAAA;;AAAA;;AAAA;AAAA,aAA2B,MAA3B,EAA2B;AAAA;;AAAA;;AAAA;AAAA,WAA3B;;AAGA;;AACJ;;;;;;AALI;;AAAA;;;;UDSKC,mB;AAOX,qCACUC,OADV,EAEUC,MAFV,EAGUC,WAHV,EAIUjE,MAJV,EAKUC,QALV,EAKkC;AAAA;;AAJxB,eAAA8D,OAAA,GAAAA,OAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAjE,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AAXD,eAAAC,cAAA,GAAgC,iFAAsBgE,IAAtD;AACA,eAAA3D,SAAA,GAAY,cAAZ;AAGD,eAAAjD,aAAA,GAA8B,IAAI,iDAAJ,EAA9B;AASN,eAAK6G,KAAL,GAAa,KAAKH,MAAL,CAAYI,QAAZ,CAAqBjB,MAArB,CAA4BC,EAAzC;AACD;;;;qCAEU;AACT,iBAAKiB,aAAL;AACD;;;0CACY;AAAA;;AACX,iBAAKpE,QAAL,CAAciB,IAAd,CAAmB,yBAAnB;;AACA,iBAAK5D,aAAL,CAAmBoB,GAAnB,CACE,KAAKuF,WAAL,CAAiBK,eAAjB,CAAiC,KAAKH,KAAtC,EACCvF,SADD,CAEE,UAACC,IAAD,EAAU;AACV,oBAAI,CAACb,aAAL,GAAqBa,IAArB;;AACA,oBAAI,CAACoB,QAAL,CAAcoB,IAAd;AACC,aALH,EAME,UAAAC,GAAG,EAAI;AACL,oBAAI,CAACrB,QAAL,CAAcoB,IAAd;;AACA,oBAAI,CAACrB,MAAL,CAAYuB,KAAZ,CAAkBD,GAAG,CAACC,KAAJ,CAAUC,OAA5B,EAAqC,YAArC;AACD,aATH,CADF;AAaD;;;2CACa;AAAA;;AACZ,gBAAIiC,KAAK,GAAG,KAAKzF,aAAL,CAAmBoF,EAA/B;;AAEA,gBAAG,KAAKpF,aAAL,CAAmBI,QAAnB,KAAgC,KAAnC,EAAyC;AACvC,mBAAKJ,aAAL,CAAmBI,QAAnB,GAA8B,CAA9B;AACD,aAFD,MAEM,IAAG,KAAKJ,aAAL,CAAmBI,QAAnB,KAAgC,IAAnC,EAAwC;AAC5C,mBAAKJ,aAAL,CAAmBI,QAAnB,GAA8B,CAA9B;AACD;;AACD,mBAAO,KAAKJ,aAAL,CAAmBoF,EAA1B;AACA,mBAAO,KAAKpF,aAAL,CAAmBuG,SAA1B;AACA,iBAAKjH,aAAL,CAAmBoB,GAAnB,CACE,KAAKuF,WAAL,CAAiBO,YAAjB,CAA8B,KAAKxG,aAAnC,EAAkDyF,KAAlD,EACC7E,SADD,CAEE,UAACC,IAAD,EAAU;AACX,oBAAI,CAAC4F,uBAAL;AACE,aAJH,EAKE,UAAAnD,GAAG,EAAI;AACL,oBAAI,CAACtB,MAAL,CAAYuB,KAAZ,CAAkBD,GAAG,CAACC,KAAJ,CAAUC,OAA5B,EAAqC,YAArC;AACD,aAPH,CADF;AAYD;;;oDAEyB;AACxB,iBAAKuC,OAAL,CAAaW,QAAb,CAAsB,CAAC,UAAD,CAAtB;AACD;;;wCAEa;AACZ,iBAAKpH,aAAL,CAAmBqH,WAAnB;;AACA,iBAAK1E,QAAL,CAAcoB,IAAd;AACD;;;;;;;yBAnEUyC,mB,EAAmB,uH,EAAA,+H,EAAA,gJ,EAAA,4I,EAAA,gJ;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,gB;AAAA,e;AAAA,iK;AAAA;AAAA;AChBhC;;AAIA;;AACI;;AAQJ;;;;AAZE,iGAAuB,gBAAvB,EAAuB,kBAAvB;;AAIiB;;AAAA;;;;;;;;;wEDWNA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT7E,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcayF,kB;AAMX,oCACUb,OADV,EAEUE,WAFV,EAGUjE,MAHV,EAG8B;AAAA;;AAFpB,eAAA+D,OAAA,GAAAA,OAAA;AACA,eAAAE,WAAA,GAAAA,WAAA;AACA,eAAAjE,MAAA,GAAAA,MAAA;AARD,eAAAE,cAAA,GAAgC,iFAAsBxB,GAAtD;AACA,eAAA6B,SAAA,GAAY,WAAZ;AAED,eAAAjD,aAAA,GAA8B,IAAI,iDAAJ,EAA9B;AAMJ;;;;qCAEO;AACT,iBAAKuH,kBAAL;AACD;;;+CAEoB;AACnB,iBAAK7G,aAAL,GAAqB;AACnBD,kBAAI,EAAE,EADa;AAEnBG,oBAAM,EAAC,EAFY;AAGnBC,oBAAM,EAAC,EAHY;AAInBC,sBAAQ,EAAE,+DAAWC;AAJF,aAArB;AAMD;;;2CAEgB;AAAA;;AACf,gBAAG,KAAKL,aAAL,CAAmBI,QAAnB,KAAgC,KAAnC,EAAyC;AACvC,mBAAKJ,aAAL,CAAmBI,QAAnB,GAA8B,CAA9B;AACD,aAFD,MAEM,IAAG,KAAKJ,aAAL,CAAmBI,QAAnB,KAAgC,IAAnC,EAAwC;AAC5C,mBAAKJ,aAAL,CAAmBI,QAAnB,GAA8B,CAA9B;AACD;;AACD,iBAAKd,aAAL,CAAmBoB,GAAnB,CACE,KAAKuF,WAAL,CAAiBa,YAAjB,CAA8B,KAAK9G,aAAnC,EAAkDY,SAAlD,CACE,UAACmG,GAAD,EAAS;AACP,oBAAI,CAACN,uBAAL;;AACA,oBAAI,CAACzE,MAAL,CAAY6B,OAAZ,WAAuB,MAAI,CAAC7D,aAAL,CAAmBD,IAA1C;AACD,aAJH,EAKE,UAACuD,GAAD,EAAS;AACP,oBAAI,CAACtB,MAAL,CAAYuB,KAAZ,CACED,GAAG,CAACC,KAAJ,CAAUC,OADZ;AAGD,aATH,CADF;AAaD;;;oDAEyB;AACxB,iBAAKuC,OAAL,CAAaW,QAAb,CAAsB,CAAC,UAAD,CAAtB;AACD;;;wCAEa;AACZ,iBAAKpH,aAAL,CAAmBqH,WAAnB;AACD;;;;;;;yBApDUC,kB,EAAkB,uH,EAAA,gJ,EAAA,4I;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,gB;AAAA,e;AAAA,oJ;AAAA;AAAA;ACd/B;;AAIA;;AACI;;AAEA;AAAA,qBAAU,IAAAI,cAAA,EAAV;AAA0B,aAA1B,EAA2B,MAA3B,EAA2B;AAAA,qBACnB,IAAAP,uBAAA,EADmB;AACM,aADjC;;AAGA;;AACJ;;;;AAVE,iGAAuB,gBAAvB,EAAuB,kBAAvB;;AAKE;;AAAA;;;;;;;;;wEDQSG,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT3F,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U","file":"pages-apikey-apikey-module-es5.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport get from 'lodash.get';\nimport set from 'lodash.set';\nimport { StatusEnum } from '@const/api.constant';\nimport { ApikeyI} from '../../models/apikey.model';\nimport { ApikeyHttpService } from '../../services/apikey-http.service';\n@Component({\n  selector: 'app-apikey-form',\n  templateUrl: './apikey-form.component.html',\n  styleUrls: ['./apikey-form.component.scss']\n})\nexport class ApikeyFormComponent implements OnInit {\n\n  @Input() apiKeyWrapper:ApikeyI;\n  @Output() submit: EventEmitter<void> = new EventEmitter<void>();\n  @Output() back: EventEmitter<void> = new EventEmitter<void>();\n  subscriptions: Subscription = new Subscription();\n  apiKeyForm: FormGroup;\n  apiKeyList = [];\n  apiKeyId:any = [];\n  roleList = [];\n  roleId:string = \"\";\n  \n  constructor(\n    private _formBuilder: FormBuilder,\n    private _apiKeyhttps: ApikeyHttpService\n    ) {}\n\n  ngOnInit() {\n    this.initapiKeyForm();\n    this.getRoleList();\n  }\n  \n  /**\n   * @description initiate endpoint form\n   * @memberof EndpointFormComponent\n   */\n   initapiKeyForm() {\n    this.apiKeyForm = this._formBuilder.group({\n      name: [get(this.apiKeyWrapper, ['name'], ''), Validators.required],\n      apikey: [get(this.apiKeyWrapper, ['apikey'], ''), Validators.required],\n      roleID: [get(this.apiKeyWrapper, ['roleID'], ''), Validators.required],\n      statusID: [\n        get(this.apiKeyWrapper, ['statusID'],StatusEnum.ACTIVE)],\n     \n    });\n  }\n\n  /**\n   * @description on submit, map to wrapper and emit submit event\n   * @memberof EndpointFormComponent\n   */\n  onSubmit() {\n    this.mapToWrapper();\n    this.submit.emit();\n  }\n\n  /**\n   * @description map form value to wrapper\n   * @memberof EndpointFormComponent\n   */\n  mapToWrapper() {\n    let formValue = this.apiKeyForm.getRawValue();\n    set(this.apiKeyWrapper, ['name'], formValue['name']);\n    set(this.apiKeyWrapper, ['apikey'], formValue['apikey']);\n    set(this.apiKeyWrapper, ['statusID'], formValue['statusID']);\n    set(this.apiKeyWrapper, ['roleID'], formValue['roleID']);\n  }\n  getRoleList() {\n    this.subscriptions.add(\n      this._apiKeyhttps.fetchAllRole().subscribe(resp=>{\n       this.roleList = resp.data;\n      })\n    )  \n  }\n  \n/**\n   * @description emit back click\n   * @memberof EndpointFormComponent\n   */\n onBackClick() {\n  this.back.emit();\n}\n\n}\n","<form [formGroup]=\"apiKeyForm\" class=\"p-4 pb-0\">\n  \n    <!--Name-->\n    <div class=\"row\">\n      <div class=\"form-group col-lg-6 required\">\n        <label>Name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\n      </div>\n      <div class=\"form-group col-lg-6 mt-4 required d-flex justify-content-end\">\n        <label class=\"switchToggle\">\n            <input type=\"checkbox\" formControlName=\"statusID\" />\n            <span class=\"switchSlider\"></span>\n            </label>\n      </div>\n    </div>\n    <!--Api key-->\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n          <label>Api Key</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"apikey\" />\n        </div>\n      </div>\n    \n    <!-- Role -->\n    <div class=\"row\">\n        <div class=\"col-6 form-group required\">\n          <label>Role</label>\n          <ng-select\n            class=\"w-100 text-capitalize\"\n            [multiple]=\"false\" \n            [items]=\"roleList\" \n            bindLabel=\"name\"\n            bindValue=\"id\"\n            formControlName=\"roleID\"\n            [searchable]=\"true\"\n          ></ng-select>\n        </div>\n      </div>\n    <!-- Status -->\n    <div class=\"row\">\n        \n      </div>\n    \n  </form>\n  \n  <!-- Footer -->\n  <div class=\"footer clearfix  p-4\">\n    <button\n      type=\"button\"\n      (click)=\"onBackClick()\"\n      class=\"btn btn-outline-primary font-weight-bold float-left px-4\"\n    >\n      BACK\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary font-weight-bold float-right px-4\"\n      [ngClass]=\"{ disabled: apiKeyForm.invalid }\"\n      [disabled]=\"apiKeyForm.invalid\"\n      (click)=\"onSubmit()\"\n    >\n      SAVE\n    </button>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ApikeyRoutingModule } from './apikey-routing.module';\nimport { ApikeyComponent } from './apikey.component';\nimport { AddApikeyComponent } from './add-apikey/add-apikey.component';\nimport { EditApikeyComponent } from './edit-apikey/edit-apikey.component';\nimport { ApikeyFormComponent } from './components/apikey-form/apikey-form.component';\nimport { ApikeyListingComponent } from './components/apikey-listing/apikey-listing.component';\n import {ApikeyHttpService} from './services/apikey-http.service'\n\n@NgModule({\n  declarations: [ApikeyComponent, AddApikeyComponent, EditApikeyComponent, ApikeyFormComponent, ApikeyListingComponent],\n  imports: [\n    CommonModule,\n    ApikeyRoutingModule,\n    SharedModule,\n    NgbTooltipModule,\n    NgbDropdownModule,\n    NgSelectModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    ApikeyHttpService\n  ]\n})\nexport class ApikeyModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ApikeyComponent } from '../apikey/apikey.component';\nimport { AddApikeyComponent } from './add-apikey/add-apikey.component';\nimport { EditApikeyComponent } from './edit-apikey/edit-apikey.component';\nconst routes: Routes = [\n  {\n    path:'',\n    component:ApikeyComponent\n  },\n  {\n    path:'add',\n    component:AddApikeyComponent\n  },\n  {\n    path:'edit/:id',\n    component:EditApikeyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ApikeyRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApikeyHttpService } from './services/apikey-http.service';\n\n\nimport { Subscription } from 'rxjs';\nimport { ButtonOptionsI } from '@shared/models/titlebar.model';\nimport { ApikeyI } from '../apikey/models/apikey.model';\nimport { API_CONFIG} from '@const/api.constant';\nimport { SpinnerService } from '@shared/services/spinner.service';\nimport { ToastService } from '@shared/services/toast.service';\nimport { StatusEnum } from '@const/api.constant';\nimport { BreadcrumbI } from '@shared/models/titlebar.model';\nimport { APIKEY_BREADCRUMSLIST } from '@const/breadcrumb.constant';\n@Component({\n  selector: 'app-apikey',\n  templateUrl: './apikey.component.html',\n  styleUrls: ['./apikey.component.scss']\n})\nexport class ApikeyComponent implements OnInit {\n  readonly breadcrumbList: BreadcrumbI[] = APIKEY_BREADCRUMSLIST.listing;\n  readonly button: ButtonOptionsI = {\n    label: 'Add New API Key',\n    routerLink: ['/api-key/add']\n  };\n  readonly pageTitle = 'API Key';\n  readonly pageSize = API_CONFIG.pageSize;\n  paginationTotalCount = 0;\n  currentPage = 1;\n  searchString:string;\n  where: { [key: string]: any } = {\n    statusID: {inq: [StatusEnum.ACTIVE, StatusEnum.INACTIVE]}\n  };\n  apikeyCount:number = 0;\n  apikeyList: ApikeyI[] = [];\n  apikeyFilter: { [key: string]: any } = {};\n  subscriptions: Subscription = new Subscription();\n  constructor(\n    private readonly _apkeyhttps:ApikeyHttpService,\n    private _toast: ToastService,\n    private _spinner: SpinnerService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getApiKeysList();\n  }\n  getApiKeysList() {\n    this._spinner.show(\"Fetching API Key list...\")\n    this.subscriptions.add(\n      this._apkeyhttps.fetchAllApiKeys(this.pageSize,this.currentPage,this.where).subscribe(resp=>{\n        \n        this.apikeyList = resp.data\n        this.apikeyCount = resp.count;\n        this._spinner.hide();\n      },\n        (err) => {\n          this._toast.error(err.error.message)\n          this._spinner.hide();\n      })\n    )  \n  }\n  onPageChange(currentPage: number) {\n    this.currentPage = currentPage;\n    this.getApiKeysList();\n  }\n  onSearchChange(searchString: string) {\n    this.searchString = searchString;\n    if (this.searchString) {\n      this.where.search = searchString;\n    } else {\n      delete this.where.search;\n    }\n    this.currentPage = 1;\n    this.getApiKeysList()\n  }\n  onStatusUpdate(api){\n    this.subscriptions.add(\n      this._apkeyhttps.deleteApiKey(api).subscribe(\n        (resp: any) => {\n          this.getApiKeysList();\n          this._toast.success(\"Api Key Delete Sucessfully\")\n        },\n        (err) => {\n          this._toast.error(err.error.message)\n        }\n      )\n    );\n  }\n}\n\n","<app-page-titlebar\n  [pageTitle]=\"pageTitle\"\n  [itemCount]=\"apikeyCount\"\n  [breadcrumbList]=\"breadcrumbList\"\n  [button]=\"button\"\n></app-page-titlebar>\n<!-- Main Section -->\n<div class=\"bg-white\">\n  <nav class=\"navbar navbar-expand-sm bg-white justify-content-between \">\n    <div class=\"col-md-5 p-0\">\n      <app-search-bar\n        [placeholder]=\"'Search by  Name'\"\n        (searchChange)=\"onSearchChange($event)\"\n      ></app-search-bar>\n      \n    </div>\n  \n  </nav>\n<app-apikey-listing\n[apikeyList] = \"apikeyList\"\n(statusUpdate)=\"onStatusUpdate($event)\"\n></app-apikey-listing>\n<app-pagination\n  *ngIf=\"apikeyCount\"\n  [total]=\"apikeyCount\"\n  [currentPage]=\"currentPage\"\n  (pageChange)=\"onPageChange($event)\"\n>\n</app-pagination>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-apikey-listing',\n  templateUrl: './apikey-listing.component.html',\n  styleUrls: ['./apikey-listing.component.scss']\n})\nexport class ApikeyListingComponent implements OnInit {\n  @Input() apikeyList;\n  @Output() statusUpdate: EventEmitter<any> = new EventEmitter<any>();\n  readonly apikeyUrl: string = 'edit/';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onUpdate(updatedUserData) {\n  this.statusUpdate.emit(updatedUserData);\n  }\n\n}\n","<!-- Table -->\n<div class=\"acl-user-container\">\n    <table class=\"table user-table\">\n      <thead>\n        <tr class=\"border-top border-bottom\">\n          <th class=\"font-weight-normal align-middle  pl-3\">Date</th>\n          <th class=\"font-weight-normal align-middle  pl-3\">Name</th>\n          <th class=\"font-weight-normal align-middle \">Api Key</th>\n          <th class=\"font-weight-normal align-middle px-3\" style=\"width:120px\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n\n        <tr class=\"border-bottom\"  *ngFor=\"let api of apikeyList\">\n          <td class=\"align-middle  pl-3\">\n           {{api?.createdAt | date: 'dd/MM/yyyy' }}\n          </td>\n          <td class=\"align-middle  pl-3\">\n            {{api?.name}}\n           </td>\n          <td class=\"align-middle  text-primary\">\n            {{api?.apikey}}\n          </td>\n          \n          <td class=\"align-middle\">\n            <app-action-bar\n            [item]=\"api\"\n            (onItemUpdate)=\"onUpdate($event)\"\n            [showStatus]=\"false\"\n            [showClone]=\"false\"\n            [editPageUrl]=\"apikeyUrl + api.id\"\n          ></app-action-bar>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\nimport { API_ENDPOINT, API_CONFIG } from '@const/api.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApikeyHttpService {\n\n  private readonly baseUrl = environment.websiteNodeHost;\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * fetch all users as per filter\n   */\n   fetchAllApiKeys(\n    limit: number = API_CONFIG.pageSize,\n    page: number = 1,\n    where?: object,\n   ): Observable<any> {\n    const skip = (page - 1) * limit;\n    let filter = {\n      limit,\n      skip,\n      where,\n    }\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('filter', JSON.stringify(filter));\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.apiKey.fetchAll,\n      {\n        params: httpParams\n      }\n    );\n  }\n  /**\n   *fetch endpoint details by its {id}\n   */\n   fetchApiKeyById(id: string): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.apiKey.fetchById + `/${id}`,\n  \n    );\n  }\n  /**\n   * creates endpoint\n  */\n   createApiKey(reqBody: any): Observable<any> {\n    let params = new HttpParams();\n    return this._http.post<any>(\n      this.baseUrl + API_ENDPOINT.apiKey.create,\n      reqBody ,\n      { params }\n    );\n  }\n \n  /**\n   *updates endpoint\n  */\n   updateApiKey(reqBody: any, apiId: string): Observable<any> {\n    return this._http.put<any>(\n      this.baseUrl + API_ENDPOINT.apiKey.update + `/${apiId}`,\n       reqBody \n    );\n  }\n  /**\n   * delete endpoint\n  */\n   deleteApiKey(reqBody: any): Observable<any> {\n    return this._http.delete<any>(\n      this.baseUrl + API_ENDPOINT.apiKey.delete + `/${reqBody.id}`,\n       reqBody \n    );\n  }\n  \n  /**\n   * @description fetch all users as per filter\n   * @param {number} [pageSize=API_CONFIG.pageSize]\n   * @param {number} [currentPage=1]\n   * @param {object} [where={}]\n   * @returns {Observable<any>}\n   * @memberof UsersHttpService\n   */\n   fetchAllRole(): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.role.fetchAll\n    );\n  }\n}\n\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// Rxjs\nimport { Subscription } from 'rxjs';\nimport { ApikeyI} from '../models/apikey.model';\nimport { ApikeyHttpService } from '../services/apikey-http.service';\nimport { SpinnerService } from '@shared/services/spinner.service';\nimport { ToastService } from '@shared/services/toast.service';\nimport { BreadcrumbI } from '@shared/models/titlebar.model';\nimport { APIKEY_BREADCRUMSLIST } from '@const/breadcrumb.constant';\n@Component({\n  selector: 'app-edit-apikey',\n  templateUrl: './edit-apikey.component.html',\n  styleUrls: ['./edit-apikey.component.scss']\n})\nexport class EditApikeyComponent implements OnInit {\n  readonly breadcrumbList: BreadcrumbI[] = APIKEY_BREADCRUMSLIST.edit;\n  readonly pageTitle = 'Edit API Key';\n  apiKeyWrapper: ApikeyI;\n  apiID:string;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _apiKeyHttp: ApikeyHttpService,\n    private _toast: ToastService,\n    private _spinner: SpinnerService,\n  ) {\n    this.apiID = this._route.snapshot.params.id;\n  }\n\n  ngOnInit() {\n    this.apiKeyGetByID();\n  }\n  apiKeyGetByID(){\n    this._spinner.show(\"Fetching Admin User ...\");\n    this.subscriptions.add(\n      this._apiKeyHttp.fetchApiKeyById(this.apiID)\n      .subscribe(\n        (resp) => {\n        this.apiKeyWrapper = resp;\n        this._spinner.hide();\n        },\n        err => {\n          this._spinner.hide();\n          this._toast.error(err.error.message, 'Admin User');\n        }\n      )\n    );\n  }\n  onApiKeySubmit(){\n    let apiId = this.apiKeyWrapper.id\n    \n    if(this.apiKeyWrapper.statusID === false){\n      this.apiKeyWrapper.statusID = 0\n    }else if(this.apiKeyWrapper.statusID === true){\n      this.apiKeyWrapper.statusID = 1;\n    }\n    delete this.apiKeyWrapper.id;\n    delete this.apiKeyWrapper.createdAt;\n    this.subscriptions.add(\n      this._apiKeyHttp.updateApiKey(this.apiKeyWrapper, apiId)\n      .subscribe(\n        (resp) => {\n       this.redirectToApiKeyListing();\n        },\n        err => {\n          this._toast.error(err.error.message, 'Admin User');\n        }\n      )\n    );\n\n  }\n\n  redirectToApiKeyListing() {\n    this._router.navigate(['/api-key']);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this._spinner.hide();\n  }\n\n\n}\n","<app-page-titlebar\n  [pageTitle]=\"pageTitle\"\n  [breadcrumbList]=\"breadcrumbList\"\n></app-page-titlebar>\n<main class=\"main-section bg-white float-left w-100\">\n    <ng-container *ngIf=\"apiKeyWrapper\">\n        <app-apikey-form\n        [apiKeyWrapper]=\"apiKeyWrapper\" \n        (submit)=\"onApiKeySubmit()\"\n        (back)=\"redirectToApiKeyListing()\"\n        > \n        </app-apikey-form>\n    </ng-container>\n</main>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ApikeyI} from '../models/apikey.model';\nimport { ApikeyHttpService } from '../services/apikey-http.service';\nimport { StatusEnum } from '@const/api.constant';\nimport { ToastService } from '@shared/services/toast.service';\nimport { BreadcrumbI } from '@shared/models/titlebar.model';\nimport { APIKEY_BREADCRUMSLIST } from '@const/breadcrumb.constant';\n@Component({\n  selector: 'app-add-apikey',\n  templateUrl: './add-apikey.component.html',\n  styleUrls: ['./add-apikey.component.scss']\n})\nexport class AddApikeyComponent implements OnInit,OnDestroy {\n  readonly breadcrumbList: BreadcrumbI[] = APIKEY_BREADCRUMSLIST.add;\n  readonly pageTitle = 'Edit Role';\n  apiKeyWrapper: ApikeyI;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private _router: Router,\n    private _apiKeyHttp: ApikeyHttpService,\n    private _toast: ToastService\n  ) {}\n\n  ngOnInit() {\n    this.initiateApiKeyForm();\n  }\n\n  initiateApiKeyForm() {\n    this.apiKeyWrapper = {\n      name: \"\",\n      apikey:\"\",\n      roleID:\"\",\n      statusID: StatusEnum.ACTIVE\n    };\n  }\n\n  onApiKeySubmit() {\n    if(this.apiKeyWrapper.statusID === false){\n      this.apiKeyWrapper.statusID = 0\n    }else if(this.apiKeyWrapper.statusID === true){\n      this.apiKeyWrapper.statusID = 1;\n    }\n    this.subscriptions.add(\n      this._apiKeyHttp.createApiKey(this.apiKeyWrapper).subscribe(\n        (res) => {\n          this.redirectToApiKeyListing();\n          this._toast.success(`${this.apiKeyWrapper.name} Created successfully.`);\n        },\n        (err) => {\n          this._toast.error(\n            err.error.message,\n          );\n        }\n      )\n    );\n  }\n\n  redirectToApiKeyListing() {\n    this._router.navigate(['/api-key']);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<app-page-titlebar\n  [pageTitle]=\"pageTitle\"\n  [breadcrumbList]=\"breadcrumbList\"\n></app-page-titlebar>\n<main class=\"main-section bg-white float-left w-100\">\n    <app-apikey-form\n    [apiKeyWrapper]=\"apiKeyWrapper\" \n    (submit)=\"onApiKeySubmit()\"\n    (back)=\"redirectToApiKeyListing()\"\n    > \n    </app-apikey-form>\n</main>"]}