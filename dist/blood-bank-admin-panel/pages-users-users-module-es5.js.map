{"version":3,"sources":["webpack:///src/app/pages/users/users.module.ts","webpack:///src/app/pages/users/add-users/add-users.component.ts","webpack:///src/app/pages/users/add-users/add-users.component.html","webpack:///src/app/pages/users/components/users-form/users-form.component.ts","webpack:///src/app/pages/users/components/users-form/users-form.component.html","webpack:///src/app/pages/users/edit-users/edit-users.component.ts","webpack:///src/app/pages/users/edit-users/edit-users.component.html","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users.component.html","webpack:///src/app/pages/users/users-routing.module.ts","webpack:///src/app/pages/users/services/user-http.service.ts","webpack:///src/app/pages/users/components/users-listing/users-listing.component.ts","webpack:///src/app/pages/users/components/users-listing/users-listing.component.html"],"names":["UsersModule","declarations","imports","providers","AddUsersComponent","_router","_userHttp","_toast","_spinner","subscriptions","initiateUrlForm","userWrapper","firstName","lastName","phoneNumber","email","address","country","state","city","pinCode","landMark","location","username","password","bloodgroup","gender","dob","nationality","panCard","adharCard","statusID","ACTIVE","userDetails","show","add","createUser","subscribe","res","redirectToUserListing","success","err","error","message","navigate","unsubscribe","onUserSubmit","selector","templateUrl","styleUrls","UsersFormComponent","_formBuilder","submit","back","roleList","roleId","inituserForm","userForm","group","required","emit","value","onBackClick","onSubmit","EditUsersComponent","_route","pageTitle","userAdminID","snapshot","params","id","userAdminGetByID","fetchUserById","resp","hide","adminId","updateUser","redirectToAdminListing","UsersComponent","_userhttps","button","label","routerLink","pageSize","paginationTotalCount","currentPage","where","inq","INACTIVE","userCount","userList","getuserList","fetchAllUsers","data","count","searchString","search","User","deleteUser","onSearchChange","onStatusUpdate","routes","path","component","UsersRoutingModule","forChild","exports","UserHttpService","_http","baseUrl","websiteNodeHost","limit","page","skip","filter","httpParams","append","JSON","stringify","get","users","fetchAll","fetchById","reqBody","post","create","userId","put","update","providedIn","UsersListingComponent","statusUpdate","userUrl","updatedUserData"],"mappings":"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","file":"pages-users-users-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersListingComponent } from './components/users-listing/users-listing.component';\nimport { UsersFormComponent } from './components/users-form/users-form.component';\nimport { UsersComponent } from './users.component';\nimport { AddUsersComponent } from './add-users/add-users.component';\nimport { EditUsersComponent } from './edit-users/edit-users.component';\nimport { UserHttpService } from './services/user-http.service'\n\n@NgModule({\n  declarations: [UsersListingComponent, UsersFormComponent, UsersComponent, AddUsersComponent, EditUsersComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UsersRoutingModule,\n    NgbTooltipModule,\n    NgbDropdownModule,\n    NgSelectModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    UserHttpService\n  ]\n})\nexport class UsersModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// Rxjs\nimport { Subscription } from 'rxjs';\nimport { UserI} from '../models/user.model';\nimport { UserHttpService } from '../services/user-http.service'\nimport { StatusEnum } from '@const/api.constant';\nimport { SpinnerService } from '@shared/services/spinner.service';\nimport { ToastService } from '@shared/services/toast.service';\n\n@Component({\n  selector: 'app-add-users',\n  templateUrl: './add-users.component.html',\n  styleUrls: ['./add-users.component.scss']\n})\nexport class AddUsersComponent implements OnInit {\n\n  userWrapper: UserI;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private _router: Router,\n    private _userHttp: UserHttpService,\n    private _toast: ToastService,\n    private _spinner: SpinnerService,\n  ) {}\n\n  ngOnInit() {\n    this.initiateUrlForm();\n  }\n\n  initiateUrlForm() {\n    this.userWrapper = {\n      firstName: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      address: {\n          country: \"\",\n          state: \"\",\n          city: \"\",\n          pinCode: \"\",\n          landMark: \"\",\n          location: \"\"\n      },\n      username: \"\",\n      password: \"\",\n      bloodgroup: \"\",\n      gender: \"\",\n      dob: \"\",\n      nationality: \"\",\n      panCard: \"\",\n      adharCard: \"\",\n      statusID: StatusEnum.ACTIVE\n    };\n  }\n\n  onUserSubmit(userDetails) {\n    this._spinner.show(`Saving user ${userDetails.firstName}${userDetails.lastName}...`);\n    if(userDetails.statusID === false){\n      userDetails.statusID = 0\n    }else if(userDetails.statusID === true){\n      userDetails.statusID = 1;\n    }\n    this.subscriptions.add(\n      this._userHttp.createUser(userDetails).subscribe(\n        (res) => {\n          this.redirectToUserListing();\n          this._toast.success(`${userDetails.firstName} Added Sucessfully`)\n        },\n        (err) => {\n          this._toast.error(err.error.message)\n        }\n      )\n    );\n  //   // this._spinner.hide();\n  }\n\n  redirectToUserListing() {\n    this._router.navigate(['/users']);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    // this._spinner.hide();\n  }\n\n}\n","<main class=\"main-section bg-white float-left w-100\">\n    <!-- endpoint detail form -->\n    <app-users-form\n      [userWrapper]=\"userWrapper\"\n      (submit)=\"onUserSubmit($event)\"\n      (back)=\"redirectToUserListing()\"\n    >\n    </app-users-form>\n  </main>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport get from 'lodash.get';\nimport set from 'lodash.set';\nimport { StatusEnum } from '@const/api.constant';\nimport { UserI} from '../../models/user.model';\n\n@Component({\n  selector: 'app-users-form',\n  templateUrl: './users-form.component.html',\n  styleUrls: ['./users-form.component.scss']\n})\nexport class UsersFormComponent implements OnInit {\n\n  @Input() userWrapper:UserI;\n  @Output() submit: EventEmitter<void> = new EventEmitter<void>();\n  @Output() back: EventEmitter<void> = new EventEmitter<void>();\n  subscriptions: Subscription = new Subscription();\n  userForm: FormGroup;\n  roleList = [];\n  roleId:any = [];\n  \n  \n  constructor(\n    private _formBuilder: FormBuilder,\n    ) {}\n\n  ngOnInit() {\n    this.inituserForm();\n  }\n  \n  /**\n   * @description initiate endpoint form\n   * @memberof EndpointFormComponent\n   */\n   inituserForm() {\n    this.userForm = this._formBuilder.group({\n      firstName: [get(this.userWrapper, ['firstName'], ''), Validators.required],\n      lastName: [get(this.userWrapper, ['lastName'], ''), Validators.required],\n      phoneNumber: [get(this.userWrapper, ['phoneNumber'], ''), Validators.required],\n      email: [get(this.userWrapper, ['email'], ''), Validators.required],\n      password:[get(this.userWrapper, ['password'], ''), Validators.required],\n      username:[get(this.userWrapper, ['username'], ''), Validators.required],\n      gender:[get(this.userWrapper, ['gender'], ''), Validators.required],\n      dob:[get(this.userWrapper, ['dob'], ''), Validators.required],\n      nationality:[get(this.userWrapper, ['nationality'], ''), Validators.required],\n      panCard:[get(this.userWrapper, ['panCard'], ''), Validators.required],\n      adharCard:[get(this.userWrapper, ['adharCard'], ''), Validators.required],\n      bloodgroup:[get(this.userWrapper, ['bloodgroup'], ''), Validators.required],\n\n      address: this._formBuilder.group({\n        country:[get(this.userWrapper,['country'], '')],\n        state:[get(this.userWrapper, ['state'], '')],\n        city:[get(this.userWrapper, ['city'], '')],\n        pinCode:[get(this.userWrapper, ['pinCode'], '')],\n        landMark:[get(this.userWrapper, ['landMark'], '')],\n        location:[get(this.userWrapper, ['location'], '')],\n      }),\n      \n      statusID: [\n        get(this.userWrapper, ['statusID'],StatusEnum.ACTIVE)\n      ],\n     \n    });\n  }\n\n  /**\n   * @description on submit, map to wrapper and emit submit event\n   * @memberof EndpointFormComponent\n   */\n  onSubmit() {\n    this.submit.emit(this.userForm.value);\n  }\n\n \n\n \n/**\n   * @description emit back click\n   * @memberof EndpointFormComponent\n   */\n onBackClick() {\n  this.back.emit();\n}\n\n}\n\n","<form [formGroup]=\"userForm\" class=\"p-4 pb-0\">\n  \n    <!-- endpoint-url and status -->\n    <div class=\"row\">\n      <div class=\"form-group col-lg-6 required\">\n        <label>First Name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" />\n      </div>\n      <div class=\"form-group col-lg-6 mt-4 d-flex justify-content-end\">\n        <label class=\"switchToggle\">\n            <input type=\"checkbox\" formControlName=\"statusID\" />\n            <span class=\"switchSlider\"></span>\n            </label>\n      </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n          <label>Last Name</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"lastName\" />\n        </div>\n        <div class=\"form-group col-lg-6 required\">\n            <label>Phone Number</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"phoneNumber\" />\n          </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n          <label>Email</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"email\" />\n        </div>\n        <div class=\"form-group col-lg-6 required\">\n            <label>Gender</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"gender\" />\n          </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n            <label>User name</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"username\" />\n        </div>\n        <div class=\"form-group col-lg-6 required\">\n            <label>Password</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\" />\n        </div>\n    </div>\n  \n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n          <label>DOB</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"dob\" />\n        </div>\n        <div class=\"form-group col-lg-6 required\">\n            <label>Nationality</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"nationality\" />\n          </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n          <label>Pan Card</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"panCard\" />\n        </div>\n        <div class=\"form-group col-lg-6 required\">\n            <label>Adhar Card</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"adharCard\" />\n          </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\">\n          <label>Blood Group</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"bloodgroup\" />\n        </div>\n        <div class=\"form-group col-lg-6 required\" formGroupName=\"address\"> \n            <label>Country</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"country\" />\n          </div>\n    </div>\n     <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\" formGroupName=\"address\">\n          <label>State</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"state\" />\n        </div>\n        <div class=\"form-group col-lg-6 required\" formGroupName=\"address\">\n            <label>City</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"city\" />\n          </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\" formGroupName=\"address\">\n          <label>PinCode</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"pinCode\" />\n        </div>\n        <div class=\"form-group col-lg-6 required\" formGroupName=\"address\">\n            <label>LandMark</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"landMark\" />\n          </div>\n    </div>\n     <div class=\"row\">\n        <div class=\"form-group col-lg-6 required\" formGroupName=\"address\">\n          <label>Location</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"location\" />\n        </div>\n    </div>\n    \n   </form>\n  \n  <!-- Footer -->\n  <div class=\"footer clearfix  p-4\">\n    <button\n      type=\"button\"\n      (click)=\"onBackClick()\"\n      class=\"btn btn-outline-primary font-weight-bold float-left px-4\"\n    >\n      BACK\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary font-weight-bold float-right px-4\"\n      [ngClass]=\"{ disabled: userForm.invalid }\"\n      [disabled]=\"userForm.invalid\"\n      (click)=\"onSubmit()\"\n    >\n      SAVE\n    </button>\n  </div>\n  ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n// Rxjs\nimport { Subscription } from 'rxjs';\nimport { UserI } from '../models/user.model';\nimport { UserHttpService } from '../services/user-http.service';\nimport { SpinnerService } from '@shared/services/spinner.service';\nimport { ToastService } from '@shared/services/toast.service';\n\n@Component({\n  selector: 'app-edit-users',\n  templateUrl: './edit-users.component.html',\n  styleUrls: ['./edit-users.component.scss']\n})\nexport class EditUsersComponent implements OnInit {\n  readonly pageTitle = \"Edit User\"\n  userWrapper: UserI;\n  userAdminID:string;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _userHttp: UserHttpService,\n    private _toast: ToastService,\n    private _spinner: SpinnerService,\n  ) {\n    this.userAdminID = this._route.snapshot.params.id;\n  }\n\n  ngOnInit() {\n    this.userAdminGetByID();\n  }\n  userAdminGetByID(){\n    this._spinner.show(\"Fetching Admin User ...\");\n    this.subscriptions.add(\n      this._userHttp.fetchUserById(this.userAdminID)\n      .subscribe(\n        (resp) => {\n         this.userWrapper = resp;\n        this._spinner.hide();\n        },\n        err => {\n          this._spinner.hide();\n          this._toast.error(err.error.message, 'Admin User');\n        }\n      )\n    );\n  }\n  onUserSubmit(){\n    let adminId = this.userWrapper.id\n    if(this.userWrapper.statusID === false){\n      this.userWrapper.statusID = 0\n    }else if(this.userWrapper.statusID === true){\n      this.userWrapper.statusID = 1;\n    }\n    delete this.userWrapper.id;\n    delete this.userWrapper['roleID'];\n    delete this.userWrapper['createdAt'];\n    delete this.userWrapper['updatedAt'];\n    this.subscriptions.add(\n      this._userHttp.updateUser(this.userWrapper,adminId)\n      .subscribe(\n        (resp) => {\n       this.redirectToAdminListing();\n        },\n        err => {\n          this._toast.error(err.error.message, 'Admin User');\n        }\n      )\n    );\n\n  }\n\n  redirectToAdminListing() {\n    this._router.navigate(['/users']);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this._spinner.hide();\n  }\n\n}\n","<app-page-titlebar\n  [pageTitle]=\"pageTitle\"\n></app-page-titlebar>\n<main class=\"main-section bg-white float-left w-100\">\n    <!-- endpoint detail form -->\n    <ng-container *ngIf=\"userWrapper\">\n    <app-users-form\n      [userWrapper]=\"userWrapper\"\n      (submit)=\"onUserSubmit()\"\n      (back)=\"redirectToEndpointListing()\"\n    >\n    </app-users-form>\n  </ng-container>\n  </main>","import { Component, OnInit } from '@angular/core';\nimport { UserHttpService } from './services/user-http.service';\n\n\nimport { Subscription } from 'rxjs';\nimport { ButtonOptionsI } from '@shared/models/titlebar.model';\nimport { EndpointI } from '../url/models/endpoint.model';\nimport { API_CONFIG} from '@const/api.constant';\nimport { SpinnerService } from '@shared/services/spinner.service';\nimport { ToastService } from '@shared/services/toast.service';\nimport { StatusEnum } from '@const/api.constant';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  readonly button: ButtonOptionsI = {\n    label: 'Add New User',\n    routerLink: ['/users/add']\n  };\n  readonly pageTitle = 'Users';\n  readonly pageSize = API_CONFIG.pageSize;\n  paginationTotalCount = 0;\n  currentPage = 1;\n  searchString:string;\n  where: { [key: string]: any } = {\n    statusID: {inq: [StatusEnum.ACTIVE, StatusEnum.INACTIVE]}\n  };\n  userCount:number = 0;\n  userList: EndpointI[] = [];\n \n  subscriptions: Subscription = new Subscription();\n  constructor(\n    private readonly _userhttps:UserHttpService,\n    private _toast: ToastService,\n    private _spinner: SpinnerService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getuserList();\n  }\n  getuserList() {\n    this._spinner.show(\"Fetching User list...\")\n    this.subscriptions.add(\n      this._userhttps.fetchAllUsers(this.pageSize,this.currentPage,this.where).subscribe(resp=>{\n        this.userList = resp.data\n        this.userCount = resp.count;\n        this._spinner.hide();\n      },\n        (err) => {\n          this._toast.error(err.error.message)\n          this._spinner.hide();\n      })\n    )  \n  }\n  onPageChange(currentPage: number) {\n    this.currentPage = currentPage;\n    this.getuserList();\n  }\n  onSearchChange(searchString: string) {\n    this.searchString = searchString;\n    if (this.searchString) {\n      this.where.search = searchString;\n    } else {\n      delete this.where.search;\n    }\n    this.currentPage = 1;\n    this.getuserList()\n  }\n  onStatusUpdate(User){\n    this.subscriptions.add(\n      this._userhttps.deleteUser(User).subscribe(\n        (resp: any) => {\n          this.getuserList();\n          this._toast.success(\"User Delete Sucessfully\")\n        },\n        (err) => {\n          this._toast.error(err.error.message)\n        }\n      )\n    );\n  }\n}\n\n\n\n","<app-page-titlebar\n  [pageTitle]=\"pageTitle\"\n  [itemCount]=\"userCount\"\n  [button]=\"button\"\n></app-page-titlebar>\n<!-- Main Section -->\n<div class=\"bg-white\">\n  <nav class=\"navbar navbar-expand-sm bg-white justify-content-between \">\n    <div class=\"col-md-5 p-0\">\n      <app-search-bar\n        [placeholder]=\"'Search by  Name'\"\n        (searchChange)=\"onSearchChange($event)\"\n      ></app-search-bar>\n      \n    </div>\n  \n  </nav>\n<app-users-listing\n[userList] = \"userList\"\n(statusUpdate)=\"onStatusUpdate($event)\"\n></app-users-listing>\n<app-pagination\n  *ngIf=\"userCount\"\n  [total]=\"userCount\"\n  [currentPage]=\"currentPage\"\n  (pageChange)=\"onPageChange($event)\"\n>\n</app-pagination>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users.component';\nimport { AddUsersComponent } from './add-users/add-users.component';\nimport { EditUsersComponent } from './edit-users/edit-users.component';\nconst routes: Routes = [\n  {\n    path:'',\n    component: UsersComponent\n  },\n  {\n    path:'add',\n    component: AddUsersComponent\n  },\n  {\n    path:'edit/:id',\n    component: EditUsersComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\nimport { API_ENDPOINT, API_CONFIG } from '@const/api.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserHttpService {\n\n  private readonly baseUrl = environment.websiteNodeHost;\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * fetch all users as per filter\n   */\n   fetchAllUsers(\n    limit: number = API_CONFIG.pageSize,\n    page: number = 1,\n    where?: object,\n   ): Observable<any> {\n    const skip = (page - 1) * limit;\n    let filter = {\n      limit,\n      skip,\n      where,\n    }\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('filter', JSON.stringify(filter));\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.users.fetchAll,\n      {\n        params: httpParams\n      }\n    );\n  }\n  /**\n   *fetch endpoint details by its {id}\n   */\n   fetchUserById(id: string): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.users.fetchById + `/${id}`,\n  \n    );\n  }\n  /**\n   * creates endpoint\n  */\n   createUser(reqBody: any): Observable<any> {\n    let params = new HttpParams();\n    return this._http.post<any>(\n      this.baseUrl + API_ENDPOINT.users.create,\n      reqBody ,\n      { params }\n    );\n  }\n \n  /**\n   *updates endpoint\n  */\n   updateUser(reqBody: any, userId: string): Observable<any> {\n    return this._http.put<any>(\n      this.baseUrl + API_ENDPOINT.users.update + `/${userId}`,\n       reqBody \n    );\n  }\n  /**\n   * delete endpoint\n  */\n   deleteUser(reqBody: any): Observable<any> {\n    return this._http.delete<any>(\n      this.baseUrl + API_ENDPOINT.users.delete + `/${reqBody.id}`,\n       reqBody \n    );\n  }\n  \n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-users-listing',\n  templateUrl: './users-listing.component.html',\n  styleUrls: ['./users-listing.component.scss']\n})\nexport class UsersListingComponent implements OnInit {\n  @Input() userList;\n  @Output() statusUpdate: EventEmitter<any> = new EventEmitter<any>();\n  readonly userUrl: string = 'edit/';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onUpdate(updatedUserData) {\n  this.statusUpdate.emit(updatedUserData);\n  }\n\n}\n","<!-- Table -->\n<div class=\"acl-user-container\">\n    <table class=\"table user-table\">\n      <thead>\n        <tr class=\"border-top border-bottom\">\n          <th class=\"font-weight-normal align-middle  pl-3\">Date</th>\n          <th class=\"font-weight-normal align-middle  pl-3\">Name</th>\n          <th class=\"font-weight-normal align-middle \">Phone Number</th>\n          <th class=\"font-weight-normal align-middle \">Email</th>\n          <th class=\"font-weight-normal align-middle px-3\">Username</th>\n          <th class=\"font-weight-normal align-middle px-3\" style=\"width:120px\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-bottom\"  *ngFor=\"let user of userList\">\n          <td class=\"align-middle  pl-3\">\n           {{user?.createdAt | date: 'dd/MM/yyyy' }}\n          </td>\n          <td class=\"align-middle  pl-3\">\n            {{user?.firstName}} {{user?.lastName}}\n           </td>\n          <td class=\"align-middle  text-primary\">\n            {{user?.phoneNumber}}\n          </td>\n          <td class=\"align-middle\">\n           <a href=\"mailto:{{user?.email}}\" class=\"primary-text\">{{user?.email}}</a>\n          </td>\n          <td class=\"align-middle\">\n            {{user?.username}}\n          </td>\n          <td class=\"align-middle\">\n            <app-action-bar\n            [item]=\"user\"\n            (onItemUpdate)=\"onUpdate($event)\"\n            [showStatus]=\"false\"\n            [showClone]=\"false\"\n            [editPageUrl]=\"userUrl + user.id\"\n          ></app-action-bar>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n "]}