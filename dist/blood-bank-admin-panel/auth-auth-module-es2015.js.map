{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACS;;;AAElE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE;IACjC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;CACnD,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEW;AACD;AACS;AACrB;;AAUtC,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBANZ;YACP,4DAAY;YACZ,sEAAiB;YACjB,0DAAW;SACZ;mIAEU,UAAU,mBAPN,qEAAc,EAAE,8EAAiB,aAE9C,4DAAY;QACZ,sEAAiB;QACjB,0DAAW;6FAGF,UAAU;cARtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,qEAAc,EAAE,8EAAiB,CAAC;gBACjD,OAAO,EAAE;oBACP,4DAAY;oBACZ,sEAAiB;oBACjB,0DAAW;iBACZ;aACF;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;6FDOT,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAKvB;AACF;AAO4B;;;;;;;IC8B5C,0EACI;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,+FACF;;;IAMF,mEAGK;;ADlClB,MAAM,cAAc;IAQzB,YACmB,UAA4B,EAC5B,OAAe;QADf,eAAU,GAAV,UAAU,CAAkB;QAC5B,YAAO,GAAP,OAAO,CAAQ;QARlC,cAAS,GAAG,KAAK,CAAC;QAElB,iBAAY,GAAG,KAAK,CAAC;QAEJ,kBAAa,GAAG,IAAI,iDAAY,EAAE,CAAC;IAMjD,CAAC;IAEJ,QAAQ;IACR,CAAC;IAGD,OAAO;QACL,8BAA8B;IAChC,CAAC;IAGD,YAAY,CAAC,QAAgB,EAAE,QAAgB;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,UAAU;aACZ,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC;aACzB,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CACR,CAAC,IAAW,EAAE,EAAE;YACd,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACzC,CAAC,CACF,CACJ,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,IAAW;QAC5B,YAAY,CAAC,OAAO,CAAC,6EAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7B,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;;4EAvDU,cAAc;8FAAd,cAAc;;QCpB3B,yEACI;QAAA,yEACE;QAAA,yEAGE;QAAA,yEACE;QAAA,wEACE;QAAA,uEAAW;QAAA,0EAA2B;QAAA,qEAAU;QAAA,4DAAO;QAEzD,4DAAK;QACL,yEACE;QAAA,6EASE;QANA,idAGqB,sCAEnC,IADe;QAED,0EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,4EAOF;QAAA,4DAAM;QAEN,2EACE;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAOF;QAAA,4DAAM;QACL,2EACG;QAAA,6GAEQ;QACV,8EAIE;QAAA,mEACA;QAAA,yGAGK;QACP,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAGR,4DAAM;QACR,4DAAM;QAER,4DAAM;QACR,4DAAM;;QAvBqD,2DAAkB;QAAlB,kFAAkB;QAUxD,0DAAe;QAAf,+EAAe;;6FDjCzB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule\n  ]\n})\nexport class AuthModule { }\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register works!</p>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n\nimport { take } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { UserI } from '@shared/models/user.model';\n\nimport { LoginHttpService } from './login-http.service';\n\n\nimport { LOCAL_STORAGE_KEY } from '@const/storage-key.constant';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading = false;\n  errorMessage: string;\n  invalidLogin = false;\n\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    private readonly _loginHttp: LoginHttpService,\n    private readonly _router: Router,\n    \n  ) {}\n\n  ngOnInit() {\n  }\n\n  \n  signOut(): void {\n    // this.authService.signOut();\n  }\n\n \n  onLoginClick(username: string, password: string) {\n    this.isLoading = true;\n    this.invalidLogin = false;\n    this.subscriptions.add(\n      this._loginHttp\n        .login(username, password)\n        .pipe(take(1))\n        .subscribe(\n          (data: UserI) => {\n            this.updateLocalStorage(data);\n          },\n          (err) => {\n            this.isLoading = false;\n            this.invalidLogin = true;\n            console.log(err);\n            this.errorMessage = err.error.message;\n            console.error('Login Error ==> ', err);\n          }\n        )\n    );\n  }\n\n  updateLocalStorage(data: UserI) {\n    localStorage.setItem(LOCAL_STORAGE_KEY.auth.user, JSON.stringify(data));\n    this._router.navigate(['/']);\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 500);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n}\n","<div class=\"login-page col-md-12 h-100\">\n    <div class=\"row justify-content-md-center h-100\">\n      <div\n        class=\"col-md-6 bg-white d-flex flex-wrap align-items-center justify-content-center h-100\"\n      >\n        <div class=\"login-container\">\n          <h1 class=\"font-weight-bold text-center font-xxxl\">\n            Welcome to <span class=\"text-primary\">BLOOD BANK</span>\n            \n          </h1>\n          <div class=\"col-md-12 px-0\">\n            <form\n              name=\"form\"\n              #f=\"ngForm\"\n              (ngSubmit)=\"\n                f.form.valid &&\n                  !isLoading &&\n                  onLoginClick(username.value, password.value)\n              \"\n            >\n              <div class=\"form-content\">\n                <div class=\"form-group\">\n                  <label>User Name</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    #username\n                    placeholder=\"Phone Number\"\n                    required\n                  />\n                </div>\n  \n                <div class=\"form-group\">\n                  <label>Password</label>\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    #password\n                    placeholder=\"Password\"\n                    required\n                  />\n                </div>\n                 <div class=\"form-group text-right\">\n                    <div class=\"text-danger mt-4 text-left\" *ngIf=\"invalidLogin\">\n                        {{errorMessage }}\n                      </div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-sm btn-primary mt-2 py-2 px-4 color-white text-uppercase \"\n                  >\n                    Login\n                    <i\n                      class=\"spinner-border spinner-border-sm align-middle\"\n                      *ngIf=\"isLoading\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n          \n          \n        </div>\n      </div>\n      \n    </div>\n  </div>\n  "],"sourceRoot":"webpack:///"}