{"version":3,"sources":["webpack:///src/app/pages/user-blood-bank-donate/services/user-blood-bank-donate-http.service.ts"],"names":["UserBloodBankDonateHttpService","_http","baseUrl","websiteNodeHost","limit","pageSize","page","where","skip","filter","httpParams","append","JSON","stringify","get","donate","fetchAll","params","id","fetchById","reqBody","post","create","donateUserId","put","update","bloodBank","fetchall","users","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaA,8B;AAIX,gDAAoBC,KAApB,EAAuC;AAAA;;AAAnB,eAAAA,KAAA,GAAAA,KAAA;AAFH,eAAAC,OAAA,GAAU,6DAAYC,eAAtB;AAEwB;AAEzC;;;;;;;+CAMgB;AAAA,gBAFdC,KAEc,uEAFE,+DAAWC,QAEb;AAAA,gBADdC,IACc,uEADC,CACD;AAAA,gBAAdC,KAAc;AAEd,gBAAMC,IAAI,GAAG,CAACF,IAAI,GAAG,CAAR,IAAaF,KAA1B;AACA,gBAAIK,MAAM,GAAG;AACXL,mBAAK,EAALA,KADW;AAEXI,kBAAI,EAAJA,IAFW;AAGXD,mBAAK,EAALA;AAHW,aAAb;AAKA,gBAAIG,UAAU,GAAG,IAAI,+DAAJ,EAAjB;AACAA,sBAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB,QAAlB,EAA4BC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA5B,CAAb;AACA,mBAAO,KAAKR,KAAL,CAAWa,GAAX,CACL,KAAKZ,OAAL,GAAe,iEAAaa,MAAb,CAAoBC,QAD9B,EAEL;AACEC,oBAAM,EAAEP;AADV,aAFK,CAAP;AAMD;AACD;;;;;;8CAGqBQ,E,EAAU;AAC7B,mBAAO,KAAKjB,KAAL,CAAWa,GAAX,CACL,KAAKZ,OAAL,GAAe,iEAAaa,MAAb,CAAoBI,SAAnC,cAAmDD,EAAnD,CADK,CAAP;AAID;AACD;;;;;;2CAGkBE,O,EAAY;AAC5B,gBAAIH,MAAM,GAAG,IAAI,+DAAJ,EAAb;AACA,mBAAO,KAAKhB,KAAL,CAAWoB,IAAX,CACL,KAAKnB,OAAL,GAAe,iEAAaa,MAAb,CAAoBO,MAD9B,EAELF,OAFK,EAGL;AAAEH,oBAAM,EAANA;AAAF,aAHK,CAAP;AAKD;AAED;;;;;;2CAGkBG,O,EAAcG,Y,EAAmB;AACjD,mBAAO,KAAKtB,KAAL,CAAWuB,GAAX,CACL,KAAKtB,OAAL,GAAe,iEAAaa,MAAb,CAAoBU,MAAnC,cAAgDF,YAAhD,CADK,EAEJH,OAFI,CAAP;AAID;AACD;;;;;;2CAGkBA,O,EAAY;AAC5B,mBAAO,KAAKnB,KAAL,WACL,KAAKC,OAAL,GAAe,iEAAaa,MAAb,UAAf,cAAgDK,OAAO,CAACF,EAAxD,CADK,EAEJE,OAFI,CAAP;AAID;AACD;;;;;;;8CAIkB;AAChB,mBAAO,KAAKnB,KAAL,CAAWa,GAAX,CACL,KAAKZ,OAAL,GAAe,iEAAawB,SAAb,CAAuBC,QADjC,CAAP;AAGD;;;yCACW;AACV,mBAAO,KAAK1B,KAAL,CAAWa,GAAX,CACL,KAAKZ,OAAL,GAAe,iEAAa0B,KAAb,CAAmBZ,QAD7B,CAAP;AAID;;;;;;;yBAlFUhB,8B,EAA8B,uH;AAAA,O;;;eAA9BA,8B;AAA8B,iBAA9BA,8BAA8B,K;AAAA,oBAF7B;;;;;wEAEDA,8B,EAA8B;gBAH1C,wDAG0C;iBAH/B;AACV6B,sBAAU,EAAE;AADF,W;AAG+B,U","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\nimport { API_ENDPOINT, API_CONFIG } from '@const/api.constant';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserBloodBankDonateHttpService {\n\n  private readonly baseUrl = environment.websiteNodeHost;\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * fetch all users as per filter\n   */\n   fetchAlldonateUser(\n    limit: number = API_CONFIG.pageSize,\n    page: number = 1,\n    where?: object,\n   ): Observable<any> {\n    const skip = (page - 1) * limit;\n    let filter = {\n      limit,\n      skip,\n      where,\n    }\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('filter', JSON.stringify(filter));\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.donate.fetchAll,\n      {\n        params: httpParams\n      }\n    );\n  }\n  /**\n   *fetch admin user details by its {id}\n   */\n   fetchdonateUserById(id: string): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.donate.fetchById + `/${id}`,\n  \n    );\n  }\n  /**\n   * creates admin user\n  */\n   createdonateUser(reqBody: any): Observable<any> {\n    let params = new HttpParams();\n    return this._http.post<any>(\n      this.baseUrl + API_ENDPOINT.donate.create,\n      reqBody ,\n      { params }\n    );\n  }\n \n  /**\n   *updates endpoint\n  */\n   updatedonateUser(reqBody: any, donateUserId:string): Observable<any> {\n    return this._http.put<any>(\n      this.baseUrl + API_ENDPOINT.donate.update + `/${donateUserId}`,\n       reqBody \n    );\n  }\n  /**\n   * delete endpoint\n  */\n   deletedonateUser(reqBody: any): Observable<any> {\n    return this._http.delete<any>(\n      this.baseUrl + API_ENDPOINT.donate.delete + `/${reqBody.id}`,\n       reqBody \n    );\n  }\n  /**\n   * @description fetch all Member as per filter\n   \n   */\n   fetchAllBloodBank(): Observable<any> {\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.bloodBank.fetchall\n    );\n  }\n  fetchAllUser(): Observable<any>{\n    return this._http.get<any>(\n      this.baseUrl + API_ENDPOINT.users.fetchAll,\n      \n    );\n  }\n}\n"]}